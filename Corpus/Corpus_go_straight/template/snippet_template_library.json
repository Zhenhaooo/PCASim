{
  "geometry": [
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_003_trajectory_set_25.json]\")  \n))  \nego_initial_pose = (x=152.3, y=45.1, heading=1.57)  # Facing north (Ï€/2 rad)",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_001_trajectory_set_34.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east (0 rad) at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_000_trajectory_set_101.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_002_trajectory_set_105.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_006_trajectory_set_114.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_001_trajectory_set_154.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_011_trajectory_set_80.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_002_trajectory_set_148.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_012_trajectory_set_54.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_002_trajectory_set_90.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at controlled intersection",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_003_trajectory_set_24.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_003_trajectory_set_28.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_003_trajectory_set_48.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_001_trajectory_set_37.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_012_trajectory_set_9.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at controlled intersection",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_001_trajectory_set_93.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry with temporary closure",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_010_trajectory_set_27.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_001_trajectory_set_178.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_003_trajectory_set_33.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at controlled intersection",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_008_trajectory_set_123.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_002_trajectory_set_32.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_001_trajectory_set_99.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_001_trajectory_set_30.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_005_trajectory_set_103.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_003_trajectory_set_95.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_011_trajectory_set_32.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_011_trajectory_set_70.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_000_trajectory_set_106.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_000_trajectory_set_82.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup with temporary closure\nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_001_trajectory_set_110.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_003_trajectory_set_17.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_005_trajectory_set_96.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection under traffic control",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_004_trajectory_set_18.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at controlled intersection",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_005_trajectory_set_88.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_005_trajectory_set_69.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_001_trajectory_set_75.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_008_trajectory_set_89.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_003_trajectory_set_110.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_011_trajectory_set_43.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry in fast lane",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_005_trajectory_set_27.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry in fast lane",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_011_trajectory_set_26.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_005_trajectory_set_76.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry in fast lane",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_011_trajectory_set_73.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_012_trajectory_set_22.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_012_trajectory_set_12.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at controlled intersection",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_009_trajectory_set_137.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_009_trajectory_set_98.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_000_trajectory_set_25.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_002_trajectory_set_120.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_004_trajectory_set_68.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection under traffic control",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_001_trajectory_set_11.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_002_trajectory_set_125.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at controlled intersection",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_012_trajectory_set_32.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_004_trajectory_set_98.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry with temporary closure",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_008_trajectory_set_87.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_005_trajectory_set_99.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_015_trajectory_set_63.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry in slow lane",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_011_trajectory_set_103.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_006_trajectory_set_8.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_015_trajectory_set_2.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_014_trajectory_set_20.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_018_trajectory_set_75.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_001_trajectory_set_68.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_015_trajectory_set_35.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_012_trajectory_set_132.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_004_trajectory_set_72.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_001_trajectory_set_92.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_010_trajectory_set_75.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_005_trajectory_set_21.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_011_trajectory_set_88.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_000_trajectory_set_64.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_001_trajectory_set_172.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry in fast lane",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_001_trajectory_set_102.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at controlled intersection",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_001_trajectory_set_93.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_011_trajectory_set_57.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_011_trajectory_set_67.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup with temporary closure\nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_003_trajectory_set_33.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at controlled intersection",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_009_trajectory_set_15.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_001_trajectory_set_135.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at controlled intersection",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_013_trajectory_set_55.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_001_trajectory_set_35.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry in slow lane",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_007_trajectory_set_36.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_004_trajectory_set_62.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_001_trajectory_set_29.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_015_trajectory_set_42.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_012_trajectory_set_131.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_011_trajectory_set_62.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_005_trajectory_set_19.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_001_trajectory_set_73.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_012_trajectory_set_85.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_002_trajectory_set_81.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_010_trajectory_set_76.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry with temporary closure",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_007_trajectory_set_129.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_013_trajectory_set_71.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_011_trajectory_set_110.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_015_trajectory_set_99.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_002_trajectory_set_74.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_010_trajectory_set_74.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_014_trajectory_set_57.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_007_trajectory_set_98.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_012_trajectory_set_72.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_001_trajectory_set_94.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_014_trajectory_set_133.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at controlled intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_013_trajectory_set_61.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_011_trajectory_set_61.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_006_trajectory_set_107.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at controlled intersection",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_003_trajectory_set_62.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_001_trajectory_set_101.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection under traffic control",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_004_trajectory_set_67.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_000_trajectory_set_20.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_012_trajectory_set_90.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_013_trajectory_set_122.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at controlled intersection",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_012_trajectory_set_108.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection under traffic control",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_015_trajectory_set_97.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_003_trajectory_set_109.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork  \nfrom NGSIM_env.road.lanelet import OSMReader  \n\n# Primary scene setup  \nroad = Road(network=RoadNetwork.from_lanelet2(  \n    OSMReader.load(\"[vehicle_tracks_005_trajectory_set_38.json]\")  \n))  \nego_initial_pose = (x=0.0, y=0.0, heading=0.0)  # Facing east at intersection entry"
  ],
  "spawn": [
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle  \nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=8.0  # m/s (slow lane)  \n)  \n\n# Adversarial vehicles  \nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-4.44, ego_initial_pose[1]+10.0),  \n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+20.0),  \n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle  \nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0  # m/s (urban intersection speed)  \n)  \n\n# Adversarial vehicles  \nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+1.34, ego_initial_pose[1]),  # Tailgating position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+4.49, ego_initial_pose[1]+1.5),  # Left offset position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (fast lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=12.0  # m/s (fast lane speed)  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-0.56, ego_initial_pose[1]-1.5),  # Right-rear tailgater\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+4.02, ego_initial_pose[1]-1.5),  # Right-side lane changer\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (intersection crossing)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-3.0, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+1.48),  # Left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under temporary traffic control)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+1.71),  # Left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+0.62, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (intersection crossing under temporary closure)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+5.0, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_acceleration\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (rule-compliant intersection crossing)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-3.0, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.34),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under temporary road closure)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-1.12, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (slow lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=8.0,  # m/s (slow lane speed)\n    lane_type=\"slow\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-1.07, ego_initial_pose[1]),  # Rear tailgater\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-0.96, ego_initial_pose[1]-1.5),  # Right-side tailgater\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (temporary control compliance)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+4.7, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (normal lane under traffic control)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-3.0, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.19),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (rule-compliant intersection crossing)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+15.0, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-10.0, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (normal intersection crossing)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+5.0, ego_initial_pose[1]+1.53),  # Front-left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+1.34, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (special lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-0.96, ego_initial_pose[1]-1.5),  # Right-rear tailgater\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+0.81, ego_initial_pose[1]),  # Front tailgater\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (temporary control compliance)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=6.0,  # m/s (slow lane speed)\n    lane_type=\"slow\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+5.0, ego_initial_pose[1]+1.19),  # Front-right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+1.23, ego_initial_pose[1]),  # Front tailgater\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (complying with temporary closure)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # Standard urban intersection speed\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+1.34, ego_initial_pose[1]),  # Front tailgater\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+0.88),  # Left-side tailgater \n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under temporary closure)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=8.0,  # m/s (slow lane speed)\n    lane_type=\"slow\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-3.41, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (fast lane under temporary closure)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=12.0,  # m/s (fast lane speed)\n    lane_type=\"fast\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-0.97, ego_initial_pose[1]-1.5),  # Right-rear tailgater\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+5.0, ego_initial_pose[1]+1.5),  # Left-front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under traffic control)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (controlled speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+5.0, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.4),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under temporary closure)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-5.0, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-8.0, ego_initial_pose[1]-2.86),  # Right-rear offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (fast lane under traffic control)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=12.0,  # m/s (fast lane speed)\n    lane_type=\"fast\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-3.91),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-4.31, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (standard intersection crossing)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+2.05),  # Left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-2.95),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (fast lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=12.0,  # m/s (fast lane speed)\n    lane_type=\"fast\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+5.0, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (slow lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=8.0,  # m/s (slow lane speed)\n    lane_type=\"slow\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+1.5),  # Left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+10.0, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (fast lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=12.0,  # m/s (fast lane speed)\n    lane_type=\"fast\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-0.75, ego_initial_pose[1]+1.5),  # Left-rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under temporary traffic control)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-4.46, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under temporary traffic control)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+8.0, ego_initial_pose[1]-1.5),  # Right-front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (intersection crossing under special lane conditions)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-2.55, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (slow lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=8.0,  # m/s (slow lane speed)\n    lane_type=\"slow\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right-side position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+3.58, ego_initial_pose[1]-1.5),  # Right-front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under temporary closure)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles (rear positions)\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-2.74, ego_initial_pose[1]),  # Left lane changer\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-1.22, ego_initial_pose[1]),  # Right lane changer \n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (fast lane under closure)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=12.0,  # m/s (fast lane speed)\n    lane_type=\"fast\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-5.0, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+8.0, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (normal lane under traffic control)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-3.66, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+3.16),  # Left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (rule-compliant crossing)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (controlled speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+5.0, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (slow lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=8.0,  # m/s (slow lane speed)\n    lane_type=\"slow\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-3.3, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+1.19, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (fast lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=12.0,  # m/s (fast lane speed)\n    lane_type=\"fast\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-8.0, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (slow lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=8.0,  # m/s (slow lane speed)\n    lane_type=\"slow\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+10.0, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+15.0, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"dangerous_acceleration\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (fast lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=12.0,  # m/s (fast lane speed)\n    lane_type=\"fast\"  \n)  \n\n# Adversarial vehicles (right-side speeders)\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+5.0, ego_initial_pose[1]-1.5),  # Right-front offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (standard intersection crossing)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+5.0, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-2.99),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (fast lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=12.0,  # m/s (fast lane speed)\n    lane_type=\"fast\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-1.15, ego_initial_pose[1]-1.5),  # Right-rear tailgater\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+15.0, ego_initial_pose[1]),  # Front speeding vehicle\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (fast lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=12.0,  # m/s (fast lane speed)\n    lane_type=\"fast\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-3.57, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+2.58, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (intersection crossing)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-1.34, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-0.55, ego_initial_pose[1]),  # Extreme tailgating\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (fast lane configuration under traffic control)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=12.0,  # m/s (fast lane speed)\n    lane_type=\"fast\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-3.0, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+0.8, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (special lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+1.12),  # Left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-0.81),  # Right offset \n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (fast lane under closure)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=12.0,  # m/s (fast lane speed)\n    lane_type=\"fast\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.554),  # Right-rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+10.0, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under traffic control)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (controlled speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-1.11, ego_initial_pose[1]-1.5),  # Right-rear tailgater\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+4.40, ego_initial_pose[1]+1.5),  # Front-left lane changer\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under traffic control)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-0.83, ego_initial_pose[1]-1.5),  # Right-rear tailgater\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+5.0, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (intersection crossing under closure)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+1.5),  # Left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+1.37, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under temporary closure)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-3.34),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-3.65, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (intersection crossing under special lane)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+5.0, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_acceleration\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (rule-compliant crossing)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+1.5),  # Left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-1.15, ego_initial_pose[1]+1.5),  # Left-rear tailgater\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under temporary traffic control)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+5.0, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+3.0, ego_initial_pose[1]+1.14),  # Front-left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (temporary control compliance)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=6.0,  # m/s (slow lane speed)\n    lane_type=\"slow\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-8.0, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-12.0, ego_initial_pose[1]),  # Far rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (slow lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=8.0,  # m/s (slow lane speed)\n    lane_type=\"slow\"  \n)  \n\n# Adversarial vehicles (rear position)\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-10.0, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-15.0, ego_initial_pose[1]),  # Further rear\n    heading=ego_initial_pose[2],  \n    behavior_type=\"extreme_speeding\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under temporary closure)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+4.75, ego_initial_pose[1]+1.5),  # Left-front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+1.55, ego_initial_pose[1]+1.5),  # Left-close position \n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (fast lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=12.0,  # m/s (fast lane speed)\n    lane_type=\"fast\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+1.42),  # Left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+4.38, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (fast lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=12.0,  # m/s (fast lane speed)\n    lane_type=\"fast\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-0.96),  # Right-side tailgater\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+0.80),  # Left-side tailgater\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (slow lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=8.0,  # m/s (slow lane speed)\n    lane_type=\"slow\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+10.0, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+3.5),  # Left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (slow lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=8.0,  # m/s (slow lane speed)\n    lane_type=\"slow\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+5.0, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-3.0, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (intersection crossing under temporary closure)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+0.65, ego_initial_pose[1]),  # Front tailgater\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+4.14, ego_initial_pose[1]+1.5),  # Left lane changer\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (rule-compliant intersection crossing)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+2.2, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+5.0, ego_initial_pose[1]),  # Further ahead\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under temporary traffic control)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=8.0,  # m/s (slow lane speed)\n    lane_type=\"slow\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.8),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+1.8),  # Left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (normal intersection crossing)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-5.0, ego_initial_pose[1]-2.6),  # Rear-right position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+8.0, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under temporary closure)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.888),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+1.067, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under temporary closure)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+1.5),  # Left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+8.0, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"speeding\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under temporary closure)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+1.5),  # Left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under temporary closure)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+5.0, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+1.03),  # Left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (fast lane under closure)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=12.0,  # m/s (fast lane speed)\n    lane_type=\"fast\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+0.55, ego_initial_pose[1]),  # Front tailgater\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-0.61, ego_initial_pose[1]),  # Rear tailgater\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under temporary traffic control)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+1.5),  # Left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+15.0, ego_initial_pose[1]+1.5),  # Left-front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (temporary closure conditions)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=8.0,  # m/s (slow lane speed)\n    lane_type=\"slow\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+1.5),  # Left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+3.0),  # Left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (intersection crossing under special lane rules)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+5.0, ego_initial_pose[1]+1.16),  # Front-left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+10.0, ego_initial_pose[1]+3.20),  # Front-left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (special lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right-side position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+8.0, ego_initial_pose[1]-1.5),  # Right-front position \n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (fast lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=12.0,  # m/s (fast lane speed)\n    lane_type=\"fast\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right-side position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+10.0, ego_initial_pose[1]-1.5),  # Right-front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under traffic control)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (controlled speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-0.56, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (intersection crossing under traffic control)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+3.32, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (fast lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=12.0,  # m/s (fast lane speed)\n    lane_type=\"fast\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right-side position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-1.28, ego_initial_pose[1]-1.5),  # Right-rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under temporary closure)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-2.6, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under temporary closure)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (controlled speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+1.5),  # Left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-0.74, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under temporary traffic control)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.085),  # Rear-left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+0.826, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under traffic control)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (controlled speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-3.5, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-2.96, ego_initial_pose[1]-1.48),  # Rear-right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under temporary traffic control)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+4.58, ego_initial_pose[1]+1.5),  # Left-front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+2.32, ego_initial_pose[1]+1.5),  # Left-close position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (slow lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=8.0,  # m/s (slow lane speed)\n    lane_type=\"slow\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-1.14, ego_initial_pose[1]),  # Rear tailgater\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+1.48),  # Left-side tailgater\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (slow lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=8.0,  # m/s (slow lane speed)\n    lane_type=\"slow\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+1.5),  # Left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (special lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+4.98, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-3.91),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under temporary closure)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-3.0, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-0.64, ego_initial_pose[1]),  # Tailgating position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (intersection crossing)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+1.5, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.26),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under temporary closure)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+1.5),  # Left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+3.67, ego_initial_pose[1]+1.5),  # Left-front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (special lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-0.5, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (special lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.861),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+2.017, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (intersection crossing)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+0.68),  # Left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+0.73),  # Left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (intersection crossing under temporary closure)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+1.19, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (slow lane under traffic control)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=8.0,  # m/s (slow lane speed)\n    lane_type=\"slow\"  \n)  \n\n# Adversarial vehicles (rear tailgaters)\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-1.42, ego_initial_pose[1]),  \n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-0.83, ego_initial_pose[1]),  \n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under temporary closure)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=8.0,  # m/s (slow lane speed)\n    lane_type=\"slow\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-2.21),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-0.81, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under temporary closure)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=8.0,  # m/s (slow lane speed)\n    lane_type=\"slow\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+4.68, ego_initial_pose[1]-1.5),  # Right-front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+2.32, ego_initial_pose[1]-1.5),  # Right-close position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (intersection crossing under special lane conditions)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+1.79),  # Left offset (3.586m/2)\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+3.59, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under traffic control)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-4.5),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+15.0, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (intersection crossing under traffic control)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+15.0, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+20.0, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"speeding\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (fast lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=12.0,  # m/s (fast lane speed)\n    lane_type=\"fast\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-2.43),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+10.0, ego_initial_pose[1]-2.0),  # Right-front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (fast lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=12.0,  # m/s (fast lane speed)\n    lane_type=\"fast\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-1.17, ego_initial_pose[1]),  # Rear tailgater\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right-side vehicle\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (normal lane under traffic control)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-15.0, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+20.0, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (normal lane under traffic control)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+3.75),  # Left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+3.26, ego_initial_pose[1]),  # Front position \n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (special lane compliance)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+1.335),  # Left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+15.0, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (intersection crossing under temporary closure)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-4.32, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (temporary traffic control compliance)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=6.0,  # m/s (slow lane speed under control)\n    lane_type=\"slow\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"delayed_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-3.5, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_brake\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under temporary closure)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-5.0, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (rule-compliant intersection crossing)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-5.0, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (temporary control compliance)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=6.0,  # m/s (slow lane speed)\n    lane_type=\"slow\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+3.15),  # Left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+1.16),  # Left closer offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (temporary closure compliance)  \nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=8.0,  # m/s (slow lane speed)  \n    lane_type=\"slow\"  \n)  \n\n# Adversarial vehicles (dual tailgaters)  \nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+1.273, ego_initial_pose[1]),  \n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+1.434, ego_initial_pose[1]),  \n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (temporary control compliance)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-1.114, ego_initial_pose[1]),  # Rear tailgater\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right-side vehicle\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under temporary traffic control)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+1.39),  # Left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.59),  # Right offset \n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under temporary closure)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+4.68, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+4.68, ego_initial_pose[1]-1.5),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (rule-compliant intersection crossing)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-2.5, ego_initial_pose[1]-1.5),  # Right-rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-3.27),  # Right-side position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under traffic control)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (controlled speed)\n    lane_type=\"special\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-5.0, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"aggressive_speeding\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (under temporary traffic control)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+1.79),  # Left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (fast lane configuration under traffic control)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=12.0,  # m/s (fast lane speed)\n    lane_type=\"fast\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]+1.5),  # Left offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-0.74, ego_initial_pose[1]+1.5),  # Left-rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (intersection crossing)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=10.0,  # m/s (urban intersection speed)\n    lane_type=\"normal\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.348),  # Right offset\n    heading=ego_initial_pose[2],  \n    behavior_type=\"tailgating\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]-3.161, ego_initial_pose[1]),  # Rear position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle  \n\n# Ego vehicle (fast lane configuration)\nego = HumanLikeVehicle(  \n    road=road,  \n    position=ego_initial_pose[:2],  \n    heading=ego_initial_pose[2],  \n    target_speed=12.0,  # m/s (fast lane speed)\n    lane_type=\"fast\"  \n)  \n\n# Adversarial vehicles\nadv1 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0], ego_initial_pose[1]-1.5),  # Right-side position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"sudden_brake\"  \n)  \n\nadv2 = InterActionVehicle(  \n    road=road,  \n    position=(ego_initial_pose[0]+2.97, ego_initial_pose[1]),  # Front position\n    heading=ego_initial_pose[2],  \n    behavior_type=\"unsafe_lane_change\"  \n)"
  ],
  "behavior": [
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-based)  \nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    lane_change_approved=False,  # Comply with temporary control  \n    speed_control=IDMVehicle(target_speed=8.0)  \n)  \n\n# Adversarial behaviors  \nadv1.set_behavior(  \n    lane_change_params={\"direction\": \"left\", \"duration\": 2.5},  \n    urgency=0.9  # Aggressive maneuver  \n)  \n\nadv2.set_behavior(  \n    braking_params={\"deceleration\": 4.0, \"reaction_time\": 1.68},  # ~0.4g brake  \n    trigger_distance=15.0  # Activate at 15m ahead  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-based)  \nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"proceed_with_caution\",  \n    speed_control=IDMVehicle(target_speed=10.0)  \n)  \n\n# Adversarial behaviors  \nadv1.set_behavior(  \n    following_params={\"safety_distance\": 1.34, \"min_gap\": 0.5},  \n    urgency=1.0  # Extreme tailgating\n)  \n\nadv2.set_behavior(  \n    lane_change_params={\"direction\": \"left\", \"duration\": 2.0, \"lateral_offset\": 1.5},  \n    trigger_distance=4.49,  \n    safety_check=False  # Unsafe maneuver\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"maintain_speed\",  \n    speed_control=IDMVehicle(target_speed=12.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    following_params={\"safety_distance\": 0.56, \"min_gap\": 0.3},  \n    urgency=1.2,  # Extreme tailgating\n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 1.8, \n        \"lateral_offset\": 3.0  # Aggressive swerve\n    },  \n    trigger_distance=4.02,  \n    safety_check=False  # Force dangerous maneuver\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 6.0,  # ~0.6g emergency brake\n        \"reaction_time\": 2.36  \n    },  \n    trigger_distance=5.0  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 1.5, \n        \"lateral_offset\": 1.48,\n        \"safety_margin\": 0.3  # Dangerously tight\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under traffic control)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 1.71,\n        \"safety_margin\": 0.5  # Unsafe maneuver\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 0.62, \n        \"min_gap\": 0.3  # Dangerously close\n    },  \n    urgency=1.3  # Aggressive tailgating\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under temporary closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 9.18,  # m/s speed boost\n        \"duration\": 2.5,\n        \"reaction_time\": 1.2\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 10.90,  # m/s speed boost\n        \"duration\": 3.0,\n        \"lateral_offset\": -1.5  # Right-side acceleration\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (strict rule compliance)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 5.0,  # ~0.5g emergency brake\n        \"reaction_time\": 1.94  # Delayed response\n    },  \n    trigger_distance=5.0  \n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 1.34, \n        \"min_gap\": 0.3  # Dangerously close\n    },  \n    urgency=1.1  # Aggressive tailgating\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under road closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 6.0,  # ~0.6g emergency brake\n        \"reaction_time\": 1.31  \n    },  \n    trigger_distance=5.0  \n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 1.12, \n        \"min_gap\": 0.3  # Dangerously close\n    },  \n    urgency=1.2  # Aggressive tailgating\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"maintain_speed\",  \n    speed_control=IDMVehicle(target_speed=8.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    following_params={\n        \"safety_distance\": 1.07, \n        \"min_gap\": 0.3  # Dangerously close\n    },  \n    urgency=1.1  # Aggressive tailgating\n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 0.96, \n        \"min_gap\": 0.25,  # Extremely dangerous\n        \"lateral_offset\": -1.5  # Right-side pressure\n    },  \n    urgency=1.2  # High aggression\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (control-compliant)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"distance\": 4.7,\n        \"safety_margin\": 0.4  # Tight maneuver\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    braking_params={\n        \"deceleration\": 5.0,  # ~0.5g brake\n        \"reaction_time\": 2.8  \n    },  \n    trigger_condition=\"distance<15.0\"  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under traffic control)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 1.31,\n        \"safety_margin\": 0.3  # Dangerous maneuver\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 1.8, \n        \"lateral_offset\": 1.19,\n        \"safety_margin\": 0.4  # Aggressive shift\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (strict rule compliance)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 6.0,  # ~0.6g emergency brake\n        \"reaction_time\": 2.17  \n    },  \n    trigger_distance=15.0  \n)  \n\nadv2.set_behavior(  \n    braking_params={\n        \"deceleration\": 6.0,  \n        \"reaction_time\": 2.73  \n    },  \n    trigger_distance=10.0  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"maintain_speed\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 1.53,\n        \"safety_margin\": 0.4  # Unsafe maneuver\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 1.34, \n        \"min_gap\": 0.5  # Dangerous following distance\n    },  \n    urgency=0.9  # Aggressive tailgating\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (strict intersection crossing)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    following_params={\n        \"safety_distance\": 0.96, \n        \"min_gap\": 0.3  # Dangerously close\n    },  \n    urgency=1.2,  # Aggressive tailgating\n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 0.81, \n        \"min_gap\": 0.2  # Extremely close\n    },  \n    urgency=1.3,  # High-risk tailgating\n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (control-compliant)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"reduced_speed\",  \n    speed_control=IDMVehicle(target_speed=6.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 1.19,\n        \"safety_margin\": 0.4  # Below safe threshold\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 1.23, \n        \"min_gap\": 0.5  # Hazardously close\n    },  \n    urgency=1.1  # Aggressive following\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (strict rule compliance)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False,  \n    closure_response=\"full_stop\"  # React to temporary closure\n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    following_params={\n        \"safety_distance\": 1.34,\n        \"min_gap\": 0.4  # Dangerously small gap\n    },  \n    urgency=0.9  # Persistent tailgating\n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 0.88, \n        \"min_gap\": 0.2  # Extremely dangerous gap\n    },  \n    urgency=1.1,  # Aggressive pressure\n    lateral_offset=0.88  # Left-side positioning\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=8.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 6.05,  # m/s speed boost\n        \"duration\": 2.0,\n        \"lateral_offset\": -1.5  # Right-side acceleration\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 1.8, \n        \"trigger_distance\": 3.41\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=12.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    following_params={\n        \"safety_distance\": 0.97, \n        \"min_gap\": 0.3  # Dangerous proximity\n    },  \n    urgency=1.1,  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    braking_params={\n        \"deceleration\": 5.0,  # ~0.5g emergency brake\n        \"reaction_time\": 1.35  \n    },  \n    trigger_distance=8.0  # Activation range\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (compliant with traffic control)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 2.41,\n        \"safety_margin\": 0.5  # Intentional unsafe maneuver\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 1.4, \n        \"min_gap\": 0.3  # Dangerous following distance\n    },  \n    urgency=1.2  # Aggressive tailgating\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 4.5,  # ~0.45g emergency brake\n        \"reaction_time\": 2.06  \n    },  \n    trigger_distance=5.0  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 2.86,\n        \"safety_margin\": 0.4  # Tight maneuver\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (controlled intersection)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"controlled_proceed\",  \n    speed_control=IDMVehicle(target_speed=12.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 2.2, \n        \"lateral_offset\": 3.91,\n        \"safety_margin\": 0.4  # Tight maneuver\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 1.8, \n        \"trigger_distance\": 4.31,\n        \"safety_margin\": 0.3  # Dangerous rear cut-in\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant intersection crossing)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"maintain_lane\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 2.0, \n        \"lateral_offset\": -2.05,  # Crossing to right lane\n        \"safety_margin\": 0.4  # Unsafe maneuver\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 1.8, \n        \"lateral_offset\": -2.95,  # Right-side swerve\n        \"safety_margin\": 0.3  # Dangerous gap\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under traffic control)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=12.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 6.0,  # ~0.6g emergency brake\n        \"reaction_time\": 1.574  \n    },  \n    trigger_distance=5.0  \n)  \n\nadv2.set_behavior(  \n    braking_params={\n        \"deceleration\": 5.5,  # ~0.55g brake\n        \"reaction_time\": 2.270,\n        \"lateral_offset\": -1.5  # Right-side braking\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"maintain_speed\",  \n    speed_control=IDMVehicle(target_speed=8.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 4.0,  # ~0.4g braking\n        \"reaction_time\": 1.04  \n    },  \n    trigger_distance=5.0  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 1.6,\n        \"safety_margin\": 0.4  # Tight maneuver\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under traffic control)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=12.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 6.0,  # ~0.6g emergency brake\n        \"reaction_time\": 1.35  \n    },  \n    trigger_distance=5.0  \n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 0.75, \n        \"min_gap\": 0.3  # Dangerously close\n    },  \n    urgency=1.2  # Aggressive tailgating\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under traffic control)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 2.0, \n        \"trigger_distance\": 4.46,\n        \"safety_margin\": 0.5  # Unsafe maneuver\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    braking_params={\n        \"deceleration\": 5.0,  # ~0.5g emergency brake\n        \"reaction_time\": 1.26  \n    },  \n    trigger_distance=10.0  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under traffic control)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 6.26,  # m/s speed boost\n        \"duration\": 2.5,\n        \"lateral_offset\": -1.5  # Right-side acceleration\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    braking_params={\n        \"deceleration\": 4.5,  # ~0.45g emergency brake\n        \"reaction_time\": 2.22  \n    },  \n    trigger_distance=8.0  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant in special lane)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"distance\": 2.55,\n        \"duration\": 2.0,\n        \"safety_margin\": 0.4  # Unsafe parameters\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 12.96,  # Significant speed boost\n        \"duration\": 3.0,\n        \"reaction_time\": 0.8\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=8.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 13.58,  # m/s speed boost\n        \"duration\": 2.0,\n        \"lateral_offset\": -1.5  # Right-side acceleration\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 1.8, \n        \"lateral_offset\": 3.0,\n        \"trigger_distance\": 3.58\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (strict compliance)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors (dangerous maneuvers)\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 3.5,\n        \"trigger_distance\": 2.74\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 1.8, \n        \"lateral_offset\": 3.0,\n        \"trigger_distance\": 1.22\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=12.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 6.0,  # ~0.6g emergency brake\n        \"reaction_time\": 2.011  \n    },  \n    trigger_distance=15.0  \n)  \n\nadv2.set_behavior(  \n    braking_params={\n        \"deceleration\": 6.0,  \n        \"reaction_time\": 1.394  \n    },  \n    trigger_distance=20.0  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under traffic control)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 2.0, \n        \"trigger_distance\": 3.66,\n        \"safety_margin\": 0.8  # Unsafe maneuver\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 1.8, \n        \"trigger_distance\": 3.16,\n        \"lateral_offset\": 3.16\n    },  \n    safety_check=False  # Force dangerous maneuver\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (controlled intersection)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 12.46,  # m/s speed boost\n        \"duration\": 2.0,\n        \"reaction_time\": 1.0\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 9.95,  # m/s speed boost\n        \"duration\": 2.5,\n        \"lateral_offset\": -1.5  # Right-side acceleration\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=8.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 3.3,\n        \"safety_margin\": 0.4  # Unsafe maneuver\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 1.19, \n        \"min_gap\": 0.5  # Dangerously close\n    },  \n    urgency=1.1  # Aggressive tailgating\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=12.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 6.0,  # ~0.6g emergency brake\n        \"reaction_time\": 2.23  # Delayed response\n    },  \n    trigger_distance=15.0  \n)  \n\nadv2.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 5.76,  # m/s speed boost\n        \"duration\": 3.0,\n        \"lateral_offset\": -1.5  # Right-side acceleration\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"maintain_speed\",  \n    speed_control=IDMVehicle(target_speed=8.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 12.68,  # m/s speed boost\n        \"duration\": 3.0,\n        \"reaction_time\": 1.0\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 9.85,  # m/s speed boost\n        \"duration\": 2.5,\n        \"reaction_time\": 0.8\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (intersection crossing under closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=12.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors (speeding violations)\nadv1.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 14.94,  # m/s speed boost\n        \"duration\": 3.0,\n        \"lateral_offset\": -1.5  # Right-side acceleration\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 13.76,  # m/s speed boost\n        \"duration\": 2.8,\n        \"lateral_offset\": -1.5  # Right-side acceleration\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant intersection traversal)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"maintain_speed\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 2.99,\n        \"safety_margin\": 0.8  # Unsafe maneuver\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 11.49,  # m/s speed boost\n        \"duration\": 3.0,\n        \"reaction_time\": 1.5\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant in fast lane)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"maintain_speed\",  \n    speed_control=IDMVehicle(target_speed=12.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    following_params={\n        \"safety_distance\": 1.15, \n        \"min_gap\": 0.3  # Dangerous following distance\n    },  \n    urgency=1.1,  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 9.87,  # Significant speed boost\n        \"duration\": 3.0,\n        \"reaction_time\": 1.0\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant in fast lane)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"maintain_speed\",  \n    speed_control=IDMVehicle(target_speed=12.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 3.5,\n        \"trigger_distance\": 3.57\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 1.8, \n        \"lateral_offset\": 2.5,\n        \"trigger_distance\": 2.58\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    following_params={\n        \"safety_distance\": 1.34, \n        \"min_gap\": 0.8\n    },  \n    urgency=0.9  # Persistent tailgating\n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 0.55, \n        \"min_gap\": 0.3  # Dangerously close\n    },  \n    urgency=1.2,  # Extreme aggression\n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under traffic control)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=12.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 5.0,  # ~0.5g emergency brake\n        \"reaction_time\": 1.83  \n    },  \n    trigger_distance=5.0  \n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 0.8, \n        \"min_gap\": 0.3  # Dangerously close\n    },  \n    urgency=1.2  # Aggressive tailgating\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant in special lane)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"maintain_speed\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    following_params={\n        \"safety_distance\": 1.12, \n        \"min_gap\": 0.5  # Unsafe following\n    },  \n    urgency=1.1  # Aggressive tailgating\n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 0.81, \n        \"min_gap\": 0.3  # Extremely dangerous\n    },  \n    urgency=1.3  # Very aggressive tailgating\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (constrained by closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=12.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 1.554,\n        \"safety_margin\": 0.3  # Dangerous maneuver\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    braking_params={\n        \"deceleration\": 5.0,  # ~0.5g braking\n        \"reaction_time\": 2.178  \n    },  \n    trigger_distance=10.0  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (regulation-compliant)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    following_params={\n        \"safety_distance\": 1.11, \n        \"min_gap\": 0.3  # Dangerous proximity\n    },  \n    urgency=1.1  # Aggressive tailgating\n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 2.2, \n        \"lateral_offset\": 3.0,  # Sharp maneuver\n        \"trigger_distance\": 4.40\n    },  \n    safety_check=False  # Force unsafe action\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under traffic control)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    following_params={\n        \"safety_distance\": 0.83, \n        \"min_gap\": 0.3  # Dangerous tailgating\n    },  \n    urgency=1.2,  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 5.6,  # m/s speed boost\n        \"duration\": 2.0,\n        \"reaction_time\": 1.0\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 6.0,  # ~0.6g emergency brake\n        \"reaction_time\": 2.44  # Delayed reaction\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 1.37, \n        \"min_gap\": 0.5  # Dangerous proximity\n    },  \n    urgency=1.2  # Aggressive tailgating\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 2.0, \n        \"lateral_offset\": -3.34,\n        \"safety_margin\": 0.4  # Dangerous maneuver\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 2.5, \n        \"lateral_offset\": -3.65,\n        \"reaction_time\": 1.8  # Delayed dangerous action\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant in special lane)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 7.33,  # m/s speed boost\n        \"duration\": 2.0,\n        \"reaction_time\": 1.0\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 8.99,  # m/s speed boost\n        \"duration\": 2.5,\n        \"lateral_offset\": -1.5  # Right-side acceleration\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (controlled intersection crossing)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 5.0,  # ~0.5g emergency brake\n        \"reaction_time\": 1.3  \n    },  \n    trigger_distance=5.0  \n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 1.15, \n        \"min_gap\": 0.4  # Dangerous proximity\n    },  \n    urgency=1.1  # Aggressive tailgating\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under traffic control)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 8.58,  # m/s speed boost\n        \"duration\": 2.0,\n        \"reaction_time\": 1.0\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 1.5, \n        \"lateral_offset\": 1.14,\n        \"safety_margin\": 0.2  # Dangerously tight\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (control-compliant)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=6.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 13.03,  # m/s speed boost\n        \"duration\": 3.0,\n        \"reaction_time\": 0.5\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    braking_params={\n        \"deceleration\": 5.0,  # ~0.5g brake\n        \"reaction_time\": 1.17  # Delayed response\n    },  \n    trigger_distance=12.0  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"maintain_speed\",  \n    speed_control=IDMVehicle(target_speed=8.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 5.53,  # m/s speed boost\n        \"duration\": 3.0,\n        \"reaction_time\": 1.5\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 9.79,  # m/s speed boost\n        \"duration\": 2.5,\n        \"reaction_time\": 1.0\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 1.5,\n        \"trigger_distance\": 4.75,\n        \"safety_margin\": 0.4  # Dangerous parameters\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 1.8, \n        \"lateral_offset\": 1.5,\n        \"trigger_distance\": 1.55,  # Extremely close initiation\n        \"safety_margin\": 0.3  # Critical safety violation\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under traffic control)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=12.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 1.42,\n        \"safety_margin\": 0.4  # Unsafe maneuver\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 2.5, \n        \"lateral_offset\": 3.5,\n        \"trigger_distance\": 4.38\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=12.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    following_params={\n        \"safety_distance\": 0.96, \n        \"min_gap\": 0.3  # Extremely close\n    },  \n    urgency=1.2,  # Aggressive tailgating\n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 0.80, \n        \"min_gap\": 0.2  # Dangerously close\n    },  \n    urgency=1.3,  # Extreme tailgating\n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=8.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 4.0,  # ~0.4g braking\n        \"reaction_time\": 1.84  \n    },  \n    trigger_distance=10.0  \n)  \n\nadv2.set_behavior(  \n    braking_params={\n        \"deceleration\": 4.0,  \n        \"reaction_time\": 2.44  # Delayed reaction\n    },  \n    trigger_distance=8.0,  \n    lateral_activation=True  # Left-side trigger\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=8.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 4.5,  # Moderate emergency brake\n        \"reaction_time\": 2.2  # Delayed response\n    },  \n    trigger_distance=5.0  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 1.04,\n        \"safety_margin\": 0.3  # Tight maneuver\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    following_params={\n        \"safety_distance\": 0.65, \n        \"min_gap\": 0.3  # Dangerously close\n    },  \n    urgency=1.2  # Aggressive tailgating\n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 1.5,\n        \"safety_margin\": 0.4  # Unsafe maneuver\n    },  \n    trigger_distance=4.14,\n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (strict rule compliance)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 2.0, \n        \"trigger_distance\": 2.2,\n        \"safety_margin\": 0.4  # Unsafe parameters\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    braking_params={\n        \"deceleration\": 5.0,  # ~0.5g emergency brake\n        \"reaction_time\": 2.55  \n    },  \n    trigger_distance=5.0  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under traffic control)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"comply_control\",  \n    speed_control=IDMVehicle(target_speed=8.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 6.67,  # m/s speed boost\n        \"duration\": 2.0,\n        \"reaction_time\": 1.0\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 1.8, \n        \"lateral_offset\": -1.8,\n        \"safety_margin\": 0.4  # Dangerous maneuver\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant intersection crossing)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"maintain_speed\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 2.6,\n        \"safety_margin\": 0.4  # Dangerous maneuver\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 13.77,  # m/s speed boost\n        \"duration\": 3.2,\n        \"reaction_time\": 1.5\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 1.888,\n        \"safety_margin\": 0.4  # Tight maneuver\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 1.067, \n        \"min_gap\": 0.5  # Dangerous proximity\n    },  \n    urgency=1.1  # Aggressive following\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 6.0,  # ~0.6g emergency brake\n        \"reaction_time\": 2.29  \n    },  \n    trigger_distance=5.0  \n)  \n\nadv2.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 11.6,  # m/s speed boost\n        \"duration\": 3.0,\n        \"reaction_time\": 1.0\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 11.22,  # m/s speed boost\n        \"duration\": 2.0,\n        \"reaction_time\": 0.8\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"distance\": 2.89,\n        \"duration\": 1.8,\n        \"safety_margin\": 0.4  # Tight maneuver\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 6.0,  # ~0.6g emergency brake\n        \"reaction_time\": 2.72  \n    },  \n    trigger_distance=5.0  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 1.03,\n        \"safety_margin\": 0.4  # Tight maneuver\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (strict compliance)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=12.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    following_params={\n        \"safety_distance\": 0.55, \n        \"min_gap\": 0.3  # Extremely close\n    },  \n    urgency=1.5  # Dangerous proximity\n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 0.61, \n        \"min_gap\": 0.3  # Unsafe distance\n    },  \n    urgency=1.3  # Aggressive following\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under traffic control)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 11.61,  # m/s speed boost\n        \"duration\": 2.5,\n        \"lateral_offset\": 1.5  # Left-side acceleration\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    braking_params={\n        \"deceleration\": 5.0,  # ~0.5g emergency brake\n        \"reaction_time\": 2.69  \n    },  \n    trigger_distance=15.0  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=8.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 13.014,  # m/s speed boost\n        \"duration\": 2.0,\n        \"reaction_time\": 0.5\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 10.659,  # m/s speed boost\n        \"duration\": 2.5,\n        \"reaction_time\": 0.7\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant in special lane)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 1.16,\n        \"safety_margin\": 0.2  # Dangerously tight\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 2.5, \n        \"lateral_offset\": 3.20,\n        \"safety_margin\": 0.3  # Unsafe maneuver\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 10.12,  # m/s speed boost\n        \"duration\": 3.0,\n        \"lateral_offset\": -1.5  # Right-side acceleration\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    braking_params={\n        \"deceleration\": 5.0,  # ~0.5g emergency brake\n        \"reaction_time\": 2.81  # Delayed reaction\n    },  \n    trigger_distance=8.0  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"maintain_speed\",  \n    speed_control=IDMVehicle(target_speed=12.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 5.35,  # m/s speed boost\n        \"duration\": 3.0,\n        \"reaction_time\": 0.5\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    braking_params={\n        \"deceleration\": 4.5,  # ~0.45g brake\n        \"reaction_time\": 1.32  \n    },  \n    trigger_distance=10.0  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (compliant with traffic control)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 14.82,  # m/s speed boost\n        \"duration\": 2.0,\n        \"lateral_offset\": -1.5  # Right-side acceleration\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 0.56, \n        \"min_gap\": 0.3  # Extremely close\n    },  \n    urgency=1.5  # Dangerous tailgating\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under traffic control)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 14.36,  # m/s speed boost\n        \"duration\": 2.0,\n        \"lateral_offset\": -1.5  # Right-side acceleration\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 1.8, \n        \"trigger_distance\": 3.32,\n        \"safety_margin\": 0.4  # Dangerous maneuver\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"maintain_speed\",  \n    speed_control=IDMVehicle(target_speed=12.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 14.44,  # m/s speed boost (~52 km/h increase)\n        \"duration\": 2.0,\n        \"reaction_time\": 0.5\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 1.28, \n        \"min_gap\": 0.3  # Dangerously close\n    },  \n    urgency=1.2  # Aggressive tailgating\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 10.1,  # m/s speed boost\n        \"duration\": 2.8,\n        \"lateral_offset\": -1.5  # Right-side acceleration\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 2.0, \n        \"distance\": 2.6,\n        \"safety_margin\": 0.4  # Dangerous margin\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (strict compliance)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 10.75,  # m/s speed boost\n        \"duration\": 2.0,\n        \"lateral_offset\": 1.5  # Left-side acceleration\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 0.74, \n        \"min_gap\": 0.3  # Extreme tailgating\n    },  \n    urgency=1.4  # Dangerous proximity\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under traffic control)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 1.085,\n        \"safety_margin\": 0.3  # Unsafe maneuver\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 0.826, \n        \"min_gap\": 0.4  # Dangerous tailgating\n    },  \n    urgency=1.2  # Aggressive following\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (compliant with traffic control)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 8.02,  # m/s speed boost\n        \"duration\": 2.0,\n        \"reaction_time\": 1.0\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 2.5, \n        \"lateral_offset\": 2.96,\n        \"safety_margin\": 0.4  # Dangerous maneuver\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under traffic control)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"proceed_with_caution\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 2.5, \n        \"lateral_offset\": 1.5,\n        \"trigger_distance\": 4.58\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 1.8,  # Faster maneuver\n        \"lateral_offset\": 1.5,\n        \"trigger_distance\": 2.32\n    },  \n    urgency=1.2,  # More aggressive\n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"maintain_speed\",  \n    speed_control=IDMVehicle(target_speed=8.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    following_params={\n        \"safety_distance\": 1.14, \n        \"min_gap\": 0.3  # Dangerously close\n    },  \n    urgency=1.1  # Aggressive tailgating\n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 1.48, \n        \"min_gap\": 0.4,\n        \"lateral_offset\": 1.48  # Left-side pressure\n    },  \n    urgency=0.9  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=8.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 4.5,  # ~0.45g braking\n        \"reaction_time\": 2.9446132581429345  \n    },  \n    trigger_distance=10.0  \n)  \n\nadv2.set_behavior(  \n    braking_params={\n        \"deceleration\": 5.0,  # ~0.5g braking\n        \"reaction_time\": 1.9508502499090683  \n    },  \n    trigger_distance=8.0  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 3.5,\n        \"trigger_distance\": 4.98\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 1.8, \n        \"lateral_offset\": -3.91,\n        \"safety_margin\": 0.4  # Dangerous maneuver\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 6.0,  # ~0.6g emergency brake\n        \"reaction_time\": 1.29  \n    },  \n    trigger_distance=5.0  \n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 0.64, \n        \"min_gap\": 0.3  # Dangerous tailgating\n    },  \n    urgency=1.2  # Aggressive following\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"proceed_with_caution\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 3.0,\n        \"safety_margin\": 0.5  # Unsafe parameters\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 1.26, \n        \"min_gap\": 0.5  # Dangerous following distance\n    },  \n    urgency=1.1  # Aggressive tailgating\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 4.5,  # ~0.45g emergency brake\n        \"reaction_time\": 2.172  \n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 1.5,\n        \"trigger_distance\": 3.674\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 6.0,  # ~0.6g emergency brake\n        \"reaction_time\": 1.81  \n    },  \n    trigger_distance=5.0  \n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 0.5, \n        \"min_gap\": 0.3  # Extreme tailgating\n    },  \n    urgency=1.5  # Aggressive following\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant in special lane)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 3.0,  # Aggressive maneuver\n        \"trigger_distance\": 1.861\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 1.8, \n        \"lateral_offset\": 2.5,\n        \"trigger_distance\": 2.017\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    following_params={\n        \"safety_distance\": 0.68, \n        \"min_gap\": 0.3  # Dangerously close\n    },  \n    urgency=1.5  # Extreme tailgating\n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 0.73, \n        \"min_gap\": 0.3  # Dangerously close\n    },  \n    urgency=1.4  # Aggressive tailgating\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under temporary closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 6.0,  # ~0.6g emergency brake\n        \"reaction_time\": 1.87  # Delayed reaction\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 1.19, \n        \"min_gap\": 0.3  # Dangerously close\n    },  \n    urgency=1.2  # Aggressive tailgating\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (constrained movement)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=8.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    following_params={\n        \"safety_distance\": 1.42, \n        \"min_gap\": 0.5\n    },  \n    urgency=0.8  \n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 0.83, \n        \"min_gap\": 0.3  # Dangerously small gap\n    },  \n    urgency=1.2,  # Aggressive following\n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=8.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 2.21,\n        \"safety_margin\": 0.4  # Unsafe maneuver\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 0.81, \n        \"min_gap\": 0.3  # Dangerously close\n    },  \n    urgency=1.1  # Aggressive tailgating\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=8.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 2.0, \n        \"lateral_offset\": -1.5,\n        \"trigger_distance\": 4.68\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 1.8, \n        \"lateral_offset\": -1.5,\n        \"trigger_distance\": 2.32\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant in special lane)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 1.79,\n        \"trigger_distance\": 3.59,\n        \"safety_margin\": 0.4  # Dangerous maneuver\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 11.09,  # m/s speed boost\n        \"duration\": 2.8,\n        \"reaction_time\": 1.5\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under traffic control)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 2.0, \n        \"lateral_offset\": -4.5,\n        \"safety_margin\": 0.8  # Unsafe maneuver\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 9.46,  # m/s speed boost\n        \"duration\": 3.0,\n        \"reaction_time\": 1.5\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under traffic control)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 6.0,  # ~0.6g emergency brake\n        \"reaction_time\": 2.247  \n    },  \n    trigger_distance=15.0  \n)  \n\nadv2.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 11.904,  # m/s speed boost\n        \"duration\": 3.0,\n        \"reaction_time\": 0.5\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under traffic control)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"maintain_speed\",  \n    speed_control=IDMVehicle(target_speed=12.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 2.5, \n        \"lateral_offset\": 2.43,\n        \"safety_margin\": 0.4  # Unsafe maneuver\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    braking_params={\n        \"deceleration\": 5.0,  # ~0.5g emergency brake\n        \"reaction_time\": 1.36  \n    },  \n    trigger_distance=10.0  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=12.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    following_params={\n        \"safety_distance\": 1.17, \n        \"min_gap\": 0.3  # Dangerous proximity\n    },  \n    urgency=1.1  # Aggressive tailgating\n)  \n\nadv2.set_behavior(  \n    braking_params={\n        \"deceleration\": 5.0,  # ~0.5g emergency brake\n        \"reaction_time\": 2.37  \n    },  \n    trigger_distance=10.0  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under traffic control)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 8.06,  # m/s speed boost\n        \"duration\": 3.0,\n        \"reaction_time\": 0.5\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    braking_params={\n        \"deceleration\": 5.0,  # ~0.5g emergency brake\n        \"reaction_time\": 2.56  \n    },  \n    trigger_distance=20.0  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under traffic control)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 3.75,\n        \"safety_margin\": 0.8  # Unsafe maneuver\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 1.8, \n        \"forward_distance\": 3.26,\n        \"safety_margin\": 0.6  # Dangerous front cut-in\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant in special lane)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 1.335,\n        \"safety_margin\": 0.4  # Unsafe maneuver\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 11.647,  # m/s speed boost\n        \"duration\": 3.0,\n        \"reaction_time\": 0.5\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under temporary closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"distance\": 4.32,\n        \"duration\": 2.0,\n        \"safety_margin\": 0.5  # Unsafe maneuver\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 5.16,  # m/s speed boost\n        \"duration\": 3.0\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (traffic control compliance)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"reduced_speed\",  \n    speed_control=IDMVehicle(target_speed=6.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 4.5,  # ~0.46g braking\n        \"reaction_time\": 2.64  # Delayed response\n    },  \n    trigger_distance=8.0  \n)  \n\nadv2.set_behavior(  \n    braking_params={\n        \"deceleration\": 6.5,  # ~0.66g emergency brake\n        \"reaction_time\": 1.08  # Quick but dangerous\n    },  \n    trigger_distance=5.0  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 11.79,  # m/s speed boost\n        \"duration\": 2.0,\n        \"reaction_time\": 0.5\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    braking_params={\n        \"deceleration\": 5.0,  # ~0.5g brake\n        \"reaction_time\": 1.46  \n    },  \n    trigger_distance=8.0  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (strict rule compliance)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 6.0,  # ~0.6g emergency brake\n        \"reaction_time\": 1.458  \n    },  \n    trigger_distance=8.0  \n)  \n\nadv2.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 14.732,  # Significant speed boost\n        \"duration\": 3.0,\n        \"lateral_offset\": -1.5  # Right-side acceleration\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (control-compliant)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=6.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 2.0, \n        \"lateral_offset\": -3.15,\n        \"safety_margin\": 0.4  # Dangerous parameters\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 1.5, \n        \"lateral_offset\": -1.16,  # More aggressive swerve\n        \"safety_margin\": 0.2  \n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (closure compliance)  \nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=8.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors (dangerous tailgating)  \nadv1.set_behavior(  \n    following_params={  \n        \"safety_distance\": 1.273,  \n        \"min_gap\": 0.3  # Extremely tight gap  \n    },  \n    urgency=1.2,  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    following_params={  \n        \"safety_distance\": 1.434,  \n        \"min_gap\": 0.25  # Even more aggressive  \n    },  \n    urgency=1.3,  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (regulation-compliant)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    following_params={\n        \"safety_distance\": 1.114, \n        \"min_gap\": 0.3  # Dangerous proximity\n    },  \n    urgency=1.1  # Aggressive tailgating\n)  \n\nadv2.set_behavior(  \n    braking_params={\n        \"deceleration\": 5.0,  # ~0.5g emergency brake\n        \"reaction_time\": 2.823  # Delayed response\n    },  \n    trigger_distance=5.0  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under traffic control)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 1.39,\n        \"safety_margin\": 0.3  # Unsafe maneuver\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 2.2, \n        \"lateral_offset\": -1.59,  # Right-to-left swerve\n        \"safety_margin\": 0.4  \n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under closure)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 4.5,  # ~0.45g emergency brake\n        \"reaction_time\": 1.66  \n    },  \n    trigger_distance=4.68  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 1.5,\n        \"safety_margin\": 0.4  # Tight maneuver\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (strict rule compliance)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 5.0,  # ~0.5g emergency brake\n        \"reaction_time\": 2.24  # Delayed reaction\n    },  \n    trigger_distance=5.0  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 3.27,\n        \"safety_margin\": 0.4  # Dangerous maneuver\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (compliant with traffic control)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    acceleration_params={\n        \"speed_increase\": 6.37,  # m/s speed boost\n        \"duration\": 2.0,\n        \"reaction_time\": 0.5\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    braking_params={\n        \"deceleration\": 5.0,  # ~0.5g brake\n        \"reaction_time\": 2.88  # Abnormal delay\n    },  \n    trigger_distance=8.0  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under traffic control)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 6.0,  # ~0.6g emergency brake\n        \"reaction_time\": 1.42  \n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 1.79,\n        \"safety_margin\": 0.5  # Unsafe maneuver\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant under traffic control)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"strict_no_change\",  \n    speed_control=IDMVehicle(target_speed=12.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 6.0,  # ~0.6g emergency brake\n        \"reaction_time\": 2.61  # Delayed reaction\n    },  \n    safety_check=False  \n)  \n\nadv2.set_behavior(  \n    following_params={\n        \"safety_distance\": 0.74, \n        \"min_gap\": 0.3  # Extremely close\n    },  \n    urgency=1.2  # Aggressive tailgating\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"proceed_with_caution\",  \n    speed_control=IDMVehicle(target_speed=10.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    following_params={\n        \"safety_distance\": 1.348, \n        \"min_gap\": 0.4  # Dangerously close\n    },  \n    urgency=1.1  # Aggressive tailgating\n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"right\", \n        \"duration\": 2.2, \n        \"trigger_distance\": 3.161,\n        \"safety_margin\": 0.4  # Tight maneuver\n    },  \n    safety_check=False  \n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle  \n\n# Ego behavior (rule-compliant)\nego.set_behavior(  \n    trajectory_type=\"straight\",  \n    intersection_handling=\"maintain_speed\",  \n    speed_control=IDMVehicle(target_speed=12.0),  \n    lane_change_approved=False  \n)  \n\n# Adversarial behaviors\nadv1.set_behavior(  \n    braking_params={\n        \"deceleration\": 4.5,  # Moderate emergency brake\n        \"reaction_time\": 2.03  \n    },  \n    trigger_distance=5.0  \n)  \n\nadv2.set_behavior(  \n    lane_change_params={\n        \"direction\": \"left\", \n        \"duration\": 2.0, \n        \"lateral_offset\": 3.5,\n        \"trigger_distance\": 2.97\n    },  \n    safety_check=False  \n)"
  ]
}