{
  "geometry": [
    "from NGSIM_env.road.road import Road, RoadNetwork\nfrom NGSIM_env.road.lane import LineType, StraightLane, PolyLane\nfrom NGSIM_env.utils import get_osm_network\n\n# Primary scene configuration\nroad_network = get_osm_network(\"[turn_round]\")  # Loading from real dataset\nego_direction = 45  # Degrees from north, turning orientation\nego_position = (x=125.6, y=78.3)  # Initial map coordinates",
    "from NGSIM_env.road.road import Road, RoadNetwork\nfrom NGSIM_env.road.lane import LineType, StraightLane, PolyLane\nfrom NGSIM_env.utils import get_osm_network\n\n# Primary scene configuration\nroad_network = get_osm_network(\"[turn_round]\")  # Loading from real dataset\nego_direction = 215  # Degrees from north, turning orientation\nego_position = (x=342.8, y=156.2)  # Initial map coordinates (intersection entry point)",
    "from NGSIM_env.road.road import Road, RoadNetwork\nfrom NGSIM_env.road.lane import LineType, StraightLane, PolyLane\nfrom NGSIM_env.utils import get_osm_network\n\n# Primary scene configuration\nroad_network = get_osm_network(\"[turn_round]\")  # Loading from real dataset\nego_direction = 180  # Degrees from north (southbound)\nego_position = (x=207.5, y=92.1)  # Initial map coordinates (intersection center)",
    "from NGSIM_env.road.road import Road, RoadNetwork\nfrom NGSIM_env.road.lane import LineType, StraightLane, PolyLane\nfrom NGSIM_env.utils import get_osm_network\n\n# Primary scene configuration\nroad_network = get_osm_network(\"[turn_round]\")  # Loading from real dataset\nego_direction = 215  # Degrees from north (southwest orientation for turn-round)\nego_position = (x=342.8, y=156.2)  # Initial map coordinates at intersection entry",
    "from NGSIM_env.road.road import Road, RoadNetwork\nfrom NGSIM_env.road.lane import LineType, StraightLane, PolyLane\nfrom NGSIM_env.utils import get_osm_network\n\n# Primary scene configuration\nroad_network = get_osm_network(\"[turn_round]\")  # Loading from real dataset\nego_direction = 215  # Degrees from north (southwest orientation)\nego_position = (x=342.8, y=156.2)  # Intersection entry coordinates",
    "from NGSIM_env.road.road import Road, RoadNetwork\nfrom NGSIM_env.road.lane import LineType, StraightLane, PolyLane\nfrom NGSIM_env.utils import get_osm_network\n\n# Primary scene configuration\nroad_network = get_osm_network(\"[turn_round]\")  # Loading from real dataset\nego_direction = 215  # Degrees from north (southwest orientation)\nego_position = (x=342.8, y=156.2)  # Intersection coordinates from dataset"
  ],
  "spawn": [
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle\nfrom NGSIM_env.vehicle.behavior import IDMVehicle\n\n# Ego vehicle configuration\nego = HumanLikeVehicle(\n    road=road_network,\n    position=ego_position,\n    heading=ego_direction,\n    target_speed=8.3  # m/s (slow lane)\n)\n\n# Adversarial vehicles\nadv1 = InterActionVehicle(\n    road=road_network,\n    position=(ego_position[0]-3.2, ego_position[1]+1.8),  # Left-rear\n    heading=ego_direction,\n    behavior_type=\"aggressive\"\n)\n\nadv2 = InterActionVehicle(\n    road=road_network,\n    position=(ego_position[0]+2.5, ego_position[1]-0.6),  # Right-front\n    heading=ego_direction,\n    behavior_type=\"tailgating\"\n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle\nfrom NGSIM_env.vehicle.behavior import IDMVehicle\n\n# Ego vehicle configuration\nego = HumanLikeVehicle(\n    road=road_network,\n    position=ego_position,\n    heading=ego_direction,\n    target_speed=11.1  # m/s (fast lane)\n)\n\n# Adversarial vehicles\nadv1 = InterActionVehicle(\n    road=road_network,\n    position=(ego_position[0]-0.88, ego_position[1]-0.15),  # Rear position\n    heading=ego_direction,\n    behavior_type=\"tailgating\"\n)\n\nadv2 = InterActionVehicle(\n    road=road_network,\n    position=(ego_position[0]-1.2, ego_position[1]+2.17),  # Left-side offset\n    heading=ego_direction+15,  # Lane-change angle\n    behavior_type=\"aggressive\"\n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle\nfrom NGSIM_env.vehicle.behavior import IDMVehicle\n\n# Ego vehicle configuration\nego = HumanLikeVehicle(\n    road=road_network,\n    position=ego_position,\n    heading=ego_direction,\n    target_speed=6.5  # m/s (U-turn speed)\n)\n\n# Adversarial vehicles\nadv1 = InterActionVehicle(\n    road=road_network,\n    position=(ego_position[0]+1.8, ego_position[1]-0.9),  # Right-side offset\n    heading=ego_direction,\n    behavior_type=\"sudden_brake\"\n)\n\nadv2 = InterActionVehicle(\n    road=road_network,\n    position=(ego_position[0]-1.3, ego_position[1]-0.75),  # Left-side offset\n    heading=ego_direction,\n    behavior_type=\"tailgating\"\n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle\nfrom NGSIM_env.vehicle.behavior import IDMVehicle\n\n# Ego vehicle configuration\nego = HumanLikeVehicle(\n    road=road_network,\n    position=ego_position,\n    heading=ego_direction,\n    target_speed=6.5  # m/s (U-turn speed)\n)\n\n# Adversarial vehicles\nadv1 = InterActionVehicle(\n    road=road_network,\n    position=(ego_position[0]+1.527, ego_position[1]),  # Right-side offset\n    heading=ego_direction,\n    behavior_type=\"unsafe_lane_change\"\n)\n\nadv2 = InterActionVehicle(\n    road=road_network,\n    position=(ego_position[0]-4.552, ego_position[1]),  # Left-side offset\n    heading=ego_direction,\n    behavior_type=\"unsafe_lane_change\"\n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle\nfrom NGSIM_env.vehicle.behavior import IDMVehicle\n\n# Ego vehicle configuration\nego = HumanLikeVehicle(\n    road=road_network,\n    position=ego_position,\n    heading=ego_direction,\n    target_speed=8.5  # m/s (turn-round speed)\n)\n\n# Adversarial vehicles\nadv1 = InterActionVehicle(\n    road=road_network,\n    position=(ego_position[0]+1.31*cos(ego_direction), ego_position[1]+1.31*sin(ego_direction)),  # Front position\n    heading=ego_direction,\n    behavior_type=\"tailgating\"\n)\n\nadv2 = InterActionVehicle(\n    road=road_network,\n    position=(ego_position[0]-2.5, ego_position[1]+1.8),  # Left-side offset\n    heading=ego_direction+30,  # Approaching angle\n    behavior_type=\"speeding\"\n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle\nfrom NGSIM_env.vehicle.behavior import IDMVehicle\n\n# Ego vehicle configuration\nego = HumanLikeVehicle(\n    road=road_network,\n    position=ego_position,\n    heading=ego_direction,\n    target_speed=6.5  # m/s (turn-round speed)\n)\n\n# Adversarial vehicles\nadv1 = InterActionVehicle(\n    road=road_network,\n    position=(ego_position[0]-3.68, ego_position[1]),  # Left offset\n    heading=ego_direction,\n    behavior_type=\"unsafe_lane_change\"\n)\n\nadv2 = InterActionVehicle(\n    road=road_network,\n    position=(ego_position[0]-2.5, ego_position[1]+0.8),  # Left-front\n    heading=ego_direction,\n    behavior_type=\"sudden_brake\"\n)",
    "from NGSIM_env.vehicle.humandriving import HumanLikeVehicle, InterActionVehicle\nfrom NGSIM_env.vehicle.behavior import IDMVehicle\n\n# Ego vehicle configuration\nego = HumanLikeVehicle(\n    road=road_network,\n    position=ego_position,\n    heading=ego_direction,\n    target_speed=6.5  # m/s (turn-round speed)\n)\n\n# Adversarial vehicles\nadv1 = InterActionVehicle(\n    road=road_network,\n    position=(ego_position[0]+3.45, ego_position[1]),  # Right offset\n    heading=ego_direction,\n    behavior_type=\"unsafe_lane_change\"\n)\n\nadv2 = InterActionVehicle(\n    road=road_network,\n    position=(ego_position[0]-0.56*cos(ego_direction), ego_position[1]-0.56*sin(ego_direction)),  # Rear position\n    heading=ego_direction,\n    behavior_type=\"tailgating\"\n)"
  ],
  "behavior": [
    "from NGSIM_env.vehicle.controller import LinearController\n\n# Ego vehicle behavior\nego.controller = LinearController(\n    acceleration_params=[0.3, 0.2, 0.1],  # Conservative turning\n    steering_params=[0.8, 0.2]\n)\n\n# Adversarial behaviors\nadv1.set_behavior(\n    \"sudden_brake\",\n    params={\"reaction_time\": 2.890, \"deceleration\": 4.0}  # m/s²\n)\n\nadv2.set_behavior(\n    \"tailgating\",\n    params={\"min_distance\": 0.605, \"time_headway\": 0.5}\n)\n\n# Traffic condition\nroad_network.set_density(5)  # vehicles/km\nroad_network.set_control(\"temporary\", lane_type=\"slow\")",
    "from NGSIM_env.vehicle.controller import LinearController\n\n# Ego vehicle behavior\nego.controller = LinearController(\n    acceleration_params=[0.4, 0.3, 0.2],  # Responsive turning control\n    steering_params=[0.7, 0.3]  # Balanced steering\n)\n\n# Adversarial behaviors\nadv1.set_behavior(\n    \"tailgating\",\n    params={\"min_distance\": 0.88, \"time_headway\": 0.3}  # Close following\n)\n\nadv2.set_behavior(\n    \"unsafe_lane_change\",\n    params={\"direction\": \"left\", \"lateral_speed\": 1.2, \"duration\": 2.5}\n)\n\n# Traffic condition\nroad_network.set_density(5)  # vehicles/km\nroad_network.set_control(\"temporary\", lane_type=\"fast\")",
    "from NGSIM_env.vehicle.controller import LinearController\n\n# Ego vehicle behavior\nego.controller = LinearController(\n    acceleration_params=[0.25, 0.15, 0.1],  # Conservative U-turn control\n    steering_params=[0.6, 0.4]  # Smooth steering\n)\n\n# Adversarial behaviors\nadv1.set_behavior(\n    \"sudden_brake\",\n    params={\"reaction_time\": 2.038, \"deceleration\": 3.8}  # m/s²\n)\n\nadv2.set_behavior(\n    \"tailgating\",\n    params={\"min_distance\": 1.307, \"time_headway\": 0.4}\n)\n\n# Traffic condition\nroad_network.set_density(5)  # vehicles/km\nroad_network.set_control(\"none\", lane_type=\"special\")  # No temporary controls",
    "from NGSIM_env.vehicle.controller import LinearController\n\n# Ego vehicle behavior\nego.controller = LinearController(\n    acceleration_params=[0.25, 0.15, 0.1],  # Conservative U-turn control\n    steering_params=[0.6, 0.4]  # Smooth steering\n)\n\n# Adversarial behaviors\nadv1.set_behavior(\n    \"unsafe_lane_change\",\n    params={\"direction\": \"right\", \"lateral_speed\": 1.2, \"duration\": 2.0}\n)\n\nadv2.set_behavior(\n    \"unsafe_lane_change\", \n    params={\"direction\": \"right\", \"lateral_speed\": 1.5, \"duration\": 3.0}\n)\n\n# Traffic condition\nroad_network.set_density(50)  # vehicles/km\nroad_network.set_control(\"none\", lane_type=\"slow\")  # No temporary controls",
    "from NGSIM_env.vehicle.controller import LinearController\nimport math\n\n# Ego vehicle behavior\nego.controller = LinearController(\n    acceleration_params=[0.35, 0.25, 0.15],  # Turn-round control\n    steering_params=[0.7, 0.3]  # Balanced steering\n)\n\n# Adversarial behaviors\nadv1.set_behavior(\n    \"tailgating\",\n    params={\"min_distance\": 1.31, \"time_headway\": 0.35}\n)\n\nadv2.set_behavior(\n    \"speeding\",\n    params={\"speed_increase\": 10.51, \"acceleration_rate\": 2.5}\n)\n\n# Traffic condition\nroad_network.set_density(5)  # vehicles/km\nroad_network.set_control(\"temporary\", lane_type=\"fast\")  # Intersection closure",
    "from NGSIM_env.vehicle.controller import LinearController\n\n# Ego vehicle behavior\nego.controller = LinearController(\n    acceleration_params=[0.3, 0.2, 0.1],  # Turn-round control\n    steering_params=[0.7, 0.3]  # Balanced steering\n)\n\n# Adversarial behaviors\nadv1.set_behavior(\n    \"unsafe_lane_change\",\n    params={\"direction\": \"left\", \"lateral_speed\": 1.2, \"duration\": 2.0}\n)\n\nadv2.set_behavior(\n    \"sudden_brake\",\n    params={\"reaction_time\": 2.33, \"deceleration\": 4.2}  # m/s²\n)\n\n# Traffic condition\nroad_network.set_density(5)  # vehicles/km\nroad_network.set_control(\"none\", lane_type=\"special\")  # No temporary controls",
    "from NGSIM_env.vehicle.controller import LinearController\nimport math\n\n# Ego vehicle behavior\nego.controller = LinearController(\n    acceleration_params=[0.3, 0.2, 0.1],  # Turn-round control\n    steering_params=[0.65, 0.35]  # Smooth steering\n)\n\n# Adversarial behaviors\nadv1.set_behavior(\n    \"unsafe_lane_change\",\n    params={\"direction\": \"left\", \"lateral_speed\": 1.5, \"duration\": 2.5}\n)\n\nadv2.set_behavior(\n    \"tailgating\",\n    params={\"min_distance\": 0.56, \"time_headway\": 0.3}\n)\n\n# Traffic condition\nroad_network.set_density(20)  # vehicles/km\nroad_network.set_control(\"temporary\", lane_type=\"special\")"
  ]
}