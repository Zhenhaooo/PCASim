{
  "geometry": [
    "from NGSIM_env.road.road import Road, RoadNetwork\nfrom NGSIM_env.road.lane import LineType, StraightLane, PolyLane\nfrom lanelet2.io import Origin, load\n\n# Load real-world intersection geometry\nroad_network = RoadNetwork()\nosm_map = load(\"intersection.osm\", Origin(0, 0))  # [vehicle_tracks_011_trajectory_set_17.json]\nego_route = [\n    (x=45.2, y=-122.8, heading=1.57),  # Approach position\n    (x=45.2005, y=-122.795, heading=0.0)  # Turn completion\n]",
    "from NGSIM_env.road.road import Road, RoadNetwork\nfrom NGSIM_env.road.lane import LineType, StraightLane, PolyLane\nfrom lanelet2.io import Origin, load\n\n# Load real-world intersection geometry\nroad_network = RoadNetwork()\nosm_map = load(\"intersection.osm\", Origin(0, 0))  # [vehicle_tracks_005_trajectory_set_100.json]\nego_route = [\n    (x=34.0522, y=-118.2437, heading=0.78),  # Approach position\n    (x=34.0525, y=-118.2432, heading=0.0)    # Turn completion\n]",
    "from NGSIM_env.road.road import Road, RoadNetwork\nfrom NGSIM_env.road.lane import LineType, StraightLane, PolyLane\nfrom lanelet2.io import Origin, load\n\n# Load real-world intersection geometry with construction zone\nroad_network = RoadNetwork()\nosm_map = load(\"intersection.osm\", Origin(0, 0))  # [vehicle_tracks_012_trajectory_set_82.json]\nego_route = [\n    (x=34.0522, y=-118.2437, heading=0.78),  # Approach position\n    (x=34.0525, y=-118.2432, heading=0.0)    # Turn completion\n]"
  ],
  "spawn": [
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\nego = HumanLikeVehicle(\n    road=road_network,\n    position=(45.2, -122.8),\n    heading=1.57,\n    target_speed=8.33  # 30km/h in m/s\n)\n\nadversary_1 = IDMVehicle(\n    road=road_network,\n    position=(45.2002, -122.799),  # 10m ahead\n    heading=1.57,\n    target_speed=10.0\n)\n\nadversary_2 = HumanLikeVehicle(\n    road=road_network,\n    position=(45.2005, -122.801),  # Left offset\n    heading=1.57,\n    target_speed=12.5\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\nego = HumanLikeVehicle(\n    road=road_network,\n    position=(34.0522, -118.2437),\n    heading=0.78,\n    target_speed=5.56  # 20km/h for slow lane\n)\n\nadversary_1 = IDMVehicle(\n    road=road_network,\n    position=(34.0523, -118.2439),  # Left offset\n    heading=0.78,\n    target_speed=8.33  # 30km/h\n)\n\nadversary_2 = HumanLikeVehicle(\n    road=road_network,\n    position=(34.0520, -118.2441),  # Rear position\n    heading=0.78,\n    target_speed=11.11  # 40km/h\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle making right turn\nego = HumanLikeVehicle(\n    road=road_network,\n    position=(34.0522, -118.2437),\n    heading=0.78,\n    target_speed=5.56,  # 20km/h for cautious turn\n    enable_construction_zone_behavior=True\n)\n\n# Left-side adversarial vehicle\nadversary_1 = HumanLikeVehicle(\n    road=road_network,\n    position=(34.0523, -118.2439),  # Left offset\n    heading=0.78,\n    target_speed=8.33,  # 30km/h\n    lane_change_aggressiveness=0.9\n)\n\n# Rear adversarial vehicle\nadversary_2 = IDMVehicle(\n    road=road_network,\n    position=(34.0520, -118.2441),  # Close rear position\n    heading=0.78,\n    target_speed=11.11,  # 40km/h\n    min_gap=0.8  # Tailgating parameter\n)"
  ],
  "behavior": [
    "from NGSIM_env.utils import RecursiveTimer\n\ndef adversary_1_behavior():\n    with RecursiveTimer(1.73):  # Reaction time\n        adversary_1.apply_emergency_brake(deceleration=6.0)  # Hard brake\n\ndef adversary_2_behavior():\n    adversary_2.perform_lane_change(\n        direction='left',\n        lateral_speed=1.2,  # Aggressive change\n        min_lateral_gap=3.19\n    )\n\n# Ego vehicle control\nego.follow_route(ego_route)",
    "from NGSIM_env.utils import RecursiveTimer\n\ndef adversary_1_behavior():\n    with RecursiveTimer(1.09):  # Reaction time\n        adversary_1.apply_emergency_brake(deceleration=6.0)\n\ndef adversary_2_behavior():\n    adversary_2.perform_lane_change(\n        direction='left',\n        lateral_speed=1.5,  # Aggressive change\n        min_lateral_gap=3.82\n    )\n\n# Ego vehicle control\nego.follow_route(ego_route)",
    "from NGSIM_env.utils import RecursiveTimer\n\ndef adversary_1_behavior():\n    # Unsafe lane change after reaction delay\n    with RecursiveTimer(0.85):  # Aggressive driver reaction time\n        adversary_1.perform_lane_change(\n            direction='right',\n            lateral_speed=1.8,  # Dangerous maneuver\n            min_lateral_gap=3.91\n        )\n\ndef adversary_2_behavior():\n    # Persistent tailgating behavior\n    adversary_2.set_min_gap(0.86)  # Dangerous following distance\n    adversary_2.set_emergency_decel(8.0)  # Late braking capability\n\n# Ego vehicle control with construction awareness\nego.follow_route(\n    ego_route,\n    construction_zone_speed_reduction=0.6\n)"
  ]
}