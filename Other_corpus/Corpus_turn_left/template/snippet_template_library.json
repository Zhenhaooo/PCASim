{
  "geometry": [
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load real-world intersection geometry from [HighD] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[HighD]\",\n    file_path=\"vehicle_tracks_000_trajectory_set_100.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Ego initial state (will be overridden by spawn snippet)\nego_lane = StraightLane(\n    [0, 0], [100, 0], \n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load real-world intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_000_trajectory_set_26.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Temporary road closure markers\nclosure_lane = StraightLane(\n    [15, -5], [15, 5],\n    line_types=(LineType.STRIPED, LineType.STRIPED),\n    width=3.5,\n    special_type=\"closure\"\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_002_trajectory_set_112.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Fast lane specification\nfast_lane = StraightLane(\n    [0, 0], [150, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    speed_limit=60  # km/h\n)\n\n# Temporary control markers\ncontrol_zone = StraightLane(\n    [40, -5], [40, 5],\n    line_types=(LineType.STRIPED, LineType.STRIPED),\n    width=3.5,\n    special_type=\"construction\"\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_002_trajectory_set_22.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Slow lane specification\nslow_lane = StraightLane(\n    [0, 0], [100, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    speed_limit=40  # km/h\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_003_trajectory_set_14.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Standard intersection lane\nintersection_lane = StraightLane(\n    [0, 0], [80, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    special_type=\"normal\"\n)\n\n# Temporary control markers\ncontrol_zone = StraightLane(\n    [30, -5], [30, 5],\n    line_types=(LineType.STRIPED, LineType.STRIPED),\n    width=3.5,\n    special_type=\"temporary_control\"\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_004_trajectory_set_69.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Slow lane with temporary control\nslow_lane = StraightLane(\n    [0, 0], [100, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    speed_limit=40,  # km/h\n    special_type=\"temporary_control\"\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_005_trajectory_set_106.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Temporary closure lane markers\nclosure_lane = StraightLane(\n    [25, -5], [25, 5],\n    line_types=(LineType.STRIPED, LineType.STRIPED),\n    width=3.5,\n    special_type=\"closure\"\n)\n\n# Main intersection lane\nintersection_lane = StraightLane(\n    [0, 0], [100, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_005_trajectory_set_74.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Temporary closure markers\nclosure_zone = StraightLane(\n    [25, -5], [25, 5],\n    line_types=(LineType.STRIPED, LineType.STRIPED),\n    width=3.5,\n    special_type=\"closure\"\n)\n\n# Normal intersection lane\nmain_lane = StraightLane(\n    [0, 0], [80, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_008_trajectory_set_125.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Special intersection lane\nintersection_lane = StraightLane(\n    [0, 0], [100, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    special_type=\"intersection\"\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection with temporary closure from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_009_trajectory_set_123.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Construction zone markers\nclosure_lane = StraightLane(\n    [25, -5], [25, 5],\n    line_types=(LineType.STRIPED, LineType.STRIPED),\n    width=3.5,\n    special_type=\"construction_closure\"\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_013_trajectory_set_21.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Standard intersection lane with temporary control\nmain_lane = StraightLane(\n    [0, 0], [100, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    special_type=\"temporary_control\"\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_013_trajectory_set_51.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Temporary closure lane markers\nclosure_lane = StraightLane(\n    [25, -5], [25, 5],\n    line_types=(LineType.STRIPED, LineType.STRIPED),\n    width=3.5,\n    special_type=\"closure\"\n)\n\n# High-density traffic parameters\nroad.set_density(50)  # vehicles/km",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_013_trajectory_set_69.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Standard slow lane configuration\nslow_lane = StraightLane(\n    [0, 0], [100, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    speed_limit=40  # km/h\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_014_trajectory_set_124.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Fast lane specification\nfast_lane = StraightLane(\n    [0, 0], [120, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    speed_limit=60  # km/h\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_014_trajectory_set_23.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Standard intersection lane with temporary closure\nintersection_lane = StraightLane(\n    [0, 0], [80, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    special_type=\"normal\"\n)\n\n# Road closure markers\nclosure_zone = StraightLane(\n    [30, -5], [30, 5],\n    line_types=(LineType.STRIPED, LineType.STRIPED),\n    width=3.5,\n    special_type=\"temporary_closure\"\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_014_trajectory_set_70.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Fast lane with temporary control\nfast_lane = StraightLane(\n    [0, 0], [120, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    speed_limit=60,  # km/h\n    special_type=\"temporary_control\"\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_015_trajectory_set_116.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Slow lane configuration\nslow_lane = StraightLane(\n    [0, 0], [100, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    speed_limit=40  # km/h\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load standard intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_016_trajectory_set_90.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Normal intersection lane configuration\nintersection_lane = StraightLane(\n    [0, 0], [100, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    special_type=\"normal\"\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load controlled intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_018_trajectory_set_83.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Temporary controlled slow lane\nslow_lane = StraightLane(\n    [0, 0], [120, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    speed_limit=40,  # km/h\n    special_type=\"temporary_control\"\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_019_trajectory_set_27.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Temporary closure lane markings\nclosure_lane = StraightLane(\n    [20, -5], [20, 5],\n    line_types=(LineType.STRIPED, LineType.STRIPED),\n    width=3.5,\n    special_type=\"closure\"\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load controlled intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_020_trajectory_set_38.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Temporary controlled slow lane\nslow_lane = StraightLane(\n    [0, 0], [100, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    speed_limit=40,  # km/h\n    special_type=\"temporary_control\"\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_020_trajectory_set_50.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Main lane with temporary closure\nmain_lane = StraightLane(\n    [0, 0], [100, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    special_type=\"normal\"\n)\n\n# Road closure markers\nclosure_zone = StraightLane(\n    [40, -5], [40, 5],\n    line_types=(LineType.STRIPED, LineType.STRIPED),\n    width=3.5,\n    special_type=\"temporary_closure\"\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load standard intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_021_trajectory_set_17.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Normal intersection lane\nintersection_lane = StraightLane(\n    [0, 0], [100, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    special_type=\"normal\"\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_000_trajectory_set_33.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Slow lane with temporary closure\nslow_lane = StraightLane(\n    [0, 0], [80, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    speed_limit=40,  # km/h\n    special_type=\"closure\"\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_001_trajectory_set_71.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Special lane configuration for left turns\nleft_turn_lane = StraightLane(\n    [0, 0], [80, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    special_type=\"left_turn\"\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_002_trajectory_set_118.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Temporary closure lane markers\nclosure_lane = StraightLane(\n    [25, -5], [25, 5],\n    line_types=(LineType.STRIPED, LineType.STRIPED),\n    width=3.5,\n    special_type=\"closure\"\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_002_trajectory_set_12.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Standard intersection lane\nintersection_lane = StraightLane(\n    [0, 0], [100, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    special_type=\"normal\"\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load controlled intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_002_trajectory_set_147.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Temporary controlled slow lane\nslow_lane = StraightLane(\n    [0, 0], [120, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    speed_limit=40,  # km/h\n    special_type=\"temporary_control\"\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_002_trajectory_set_24.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Standard slow lane configuration\nslow_lane = StraightLane(\n    [0, 0], [100, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    speed_limit=40  # km/h\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load controlled intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_005_trajectory_set_104.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Temporary controlled slow lane\nslow_lane = StraightLane(\n    [0, 0], [120, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    speed_limit=40,  # km/h\n    special_type=\"temporary_control\"\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_011_trajectory_set_126.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Fast lane with temporary closure\nfast_lane = StraightLane(\n    [0, 0], [120, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    speed_limit=60,  # km/h\n    special_type=\"fast_lane\"\n)\n\n# Road closure markers\nclosure_zone = StraightLane(\n    [60, -5], [60, 5],\n    line_types=(LineType.STRIPED, LineType.STRIPED),\n    width=3.5,\n    special_type=\"temporary_closure\"\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_012_trajectory_set_43.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Slow lane specification\nslow_lane = StraightLane(\n    [0, 0], [100, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    speed_limit=40  # km/h\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load controlled intersection from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_012_trajectory_set_44.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Temporary controlled lane\ncontrol_lane = StraightLane(\n    [0, 0], [80, 0],\n    line_types=(LineType.STRIPED, LineType.STRIPED),\n    width=3.5,\n    special_type=\"temporary_control\"\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_014_trajectory_set_22.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Fast lane with temporary control\nfast_lane = StraightLane(\n    [0, 0], [120, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    speed_limit=60,  # km/h\n    special_type=\"temporary_control\"\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_014_trajectory_set_32.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Standard slow lane configuration\nslow_lane = StraightLane(\n    [0, 0], [100, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    speed_limit=40  # km/h\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load controlled intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_014_trajectory_set_54.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Temporary controlled slow lane\nslow_lane = StraightLane(\n    [0, 0], [120, 0],\n    line_types=(LineType.CONTINUOUS, LineType.STRIPED),\n    width=3.5,\n    speed_limit=40,  # km/h\n    special_type=\"temporary_control\"\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_014_trajectory_set_8.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Slow lane with temporary closure\nslow_lane = StraightLane(\n    [0, 0], [100, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    speed_limit=40,  # km/h\n    special_type=\"closure\"\n)\n\n# Closure markers\nclosure_zone = StraightLane(\n    [30, -5], [30, 5],\n    line_types=(LineType.STRIPED, LineType.STRIPED),\n    width=3.5,\n    special_type=\"closure_marker\"\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_015_trajectory_set_27.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Temporary road closure markers\nclosure_lane = StraightLane(\n    [25, -5], [25, 5],\n    line_types=(LineType.STRIPED, LineType.STRIPED),\n    width=3.5,\n    special_type=\"closure\"\n)\n\n# Main intersection lane\nintersection_lane = StraightLane(\n    [0, 0], [80, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_018_trajectory_set_70.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Slow lane with temporary closure\nslow_lane = StraightLane(\n    [0, 0], [100, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    speed_limit=40,  # km/h\n    special_type=\"construction_zone\"\n)\n\n# Road closure markers\nclosure_marker = StraightLane(\n    [40, -5], [40, 5],\n    line_types=(LineType.STRIPED, LineType.STRIPED),\n    width=3.5,\n    special_type=\"road_closure\"\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_018_trajectory_set_72.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Temporary closure markers\nclosure_zone = StraightLane(\n    [25, -5], [25, 5],\n    line_types=(LineType.STRIPED, LineType.STRIPED),\n    width=3.5,\n    special_type=\"closure\"\n)\n\n# Standard intersection lane\nintersection_lane = StraightLane(\n    [0, 0], [100, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_020_trajectory_set_35.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Slow-speed lane configuration\nslow_lane = StraightLane(\n    [0, 0], [100, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    speed_limit=40  # km/h\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_006_trajectory_set_84.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Standard intersection lane with closure markers\nmain_lane = StraightLane(\n    [0, 0], [100, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    special_type=\"normal\"\n)\n\nclosure_zone = StraightLane(\n    [40, -5], [40, 5],\n    line_types=(LineType.STRIPED, LineType.STRIPED),\n    width=3.5,\n    special_type=\"temporary_closure\"\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load high-speed intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_015_trajectory_set_19.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Fast lane configuration\nfast_lane = StraightLane(\n    [0, 0], [120, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    speed_limit=60  # km/h\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_020_trajectory_set_65.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Special-type lane configuration\nspecial_lane = StraightLane(\n    [0, 0], [80, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    special_type=\"left_turn_only\"\n)",
    "from NGSIM_env.road.lane import LineType, StraightLane\nfrom NGSIM_env.road.road import Road, RoadNetwork\n\n# Load intersection geometry from [turn_left] dataset\nroad = RoadNetwork.from_osm_geometry(\n    dataset=\"[turn_left]\",\n    file_path=\"vehicle_tracks_021_trajectory_set_8.json\",\n    origin=(0, 0),\n    heading=0  # North-oriented\n)\n\n# Fast lane with temporary control\nfast_lane = StraightLane(\n    [0, 0], [120, 0],\n    line_types=(LineType.CONTINUOUS, LineType.CONTINUOUS),\n    width=3.5,\n    speed_limit=60,  # km/h\n    special_type=\"temporary_control\"\n)"
  ],
  "spawn": [
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning)\nego = HumanLikeVehicle(\n    road=road,\n    position=[30.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1  # Left-turn destination lane\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[25.0, -5.0],  # Rear position\n    heading=0,\n    speed=10.0,\n    behavior=\"aggressive\"\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[35.0, 2.5],  # Right offset\n    heading=0,\n    speed=9.5,\n    behavior=\"tailgating\"\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning)\nego = HumanLikeVehicle(\n    road=road,\n    position=[20.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1  # Left-turn destination lane\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[18.0, -3.5],  # Rear position\n    heading=np.pi/2,\n    speed=10.0,\n    behavior_params={'brake_reaction_time': 1.402}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[22.0, 2.5],  # Right offset\n    heading=0,\n    speed=9.5,\n    behavior_params={'brake_reaction_time': 2.118}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning)\nego = HumanLikeVehicle(\n    road=road,\n    position=[50.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1  # Left-turn lane\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[48.9, -1.1],  # Tailgating position\n    heading=np.pi/2,\n    speed=9.72,  # 35 km/h\n    behavior_params={'min_gap': 1.10}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[47.1, -2.91],  # Lane change position\n    heading=np.pi/2,\n    speed=10.28,  # 37 km/h\n    behavior_params={'lane_change_direction': 'right'}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning)\nego = HumanLikeVehicle(\n    road=road,\n    position=[30.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1  # Left-turn destination lane\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[30.0, 1.083],  # Tailgating position\n    heading=np.pi/2,\n    speed=8.33,\n    behavior_params={'min_gap': 1.083}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[32.237, 0.0],  # Right offset for lane change\n    heading=np.pi/2,\n    speed=9.0,\n    behavior_params={'lane_change_direction': 'right'}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning)\nego = HumanLikeVehicle(\n    road=road,\n    position=[40.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1  # Left-turn destination lane\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[42.0, 1.5],  # Right offset\n    heading=np.pi/2,\n    speed=9.0,\n    behavior_params={'brake_reaction_time': 2.514}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[40.5, 0.53],  # Tailgating position\n    heading=np.pi/2,\n    speed=8.5,\n    behavior_params={'min_gap': 0.532}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning under control zone)\nego = HumanLikeVehicle(\n    road=road,\n    position=[50.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1,  # Left-turn destination lane\n    behavior_params={'caution_factor': 0.7}\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[52.0, 1.8],  # Right offset\n    heading=np.pi/2,\n    speed=9.0,\n    behavior_params={'brake_reaction_time': 1.552}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[50.0, -1.125],  # Tailgating position\n    heading=np.pi/2,\n    speed=8.5,\n    behavior_params={'min_gap': 1.125}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning with caution)\nego = HumanLikeVehicle(\n    road=road,\n    position=[30.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1,  # Left-turn destination lane\n    behavior_params={'caution_factor': 0.8}\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[28.0, 3.5],  # Left offset position\n    heading=np.pi/2,\n    speed=19.0,  # 68.4 km/h (base 30 + 10.66 m/s increase)\n    behavior_params={'aggressiveness': 0.95}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[32.121, 0.0],  # Front-right position\n    heading=np.pi/2,\n    speed=10.0,\n    behavior_params={'lane_change_direction': 'right'}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning with caution)\nego = HumanLikeVehicle(\n    road=road,\n    position=[30.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1,  # Left-turn lane\n    behavior_params={'caution_factor': 0.8}\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[28.0, 2.273],  # Left offset for lane change\n    heading=np.pi/2,\n    speed=9.0,\n    behavior_params={'lane_change_direction': 'right'}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[32.0, -1.5],  # Right position for braking\n    heading=np.pi/2,\n    speed=8.5,\n    behavior_params={'brake_reaction_time': 1.367}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning)\nego = HumanLikeVehicle(\n    road=road,\n    position=[50.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1  # Left-turn destination lane\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[45.0, 3.5],  # Left offset\n    heading=np.pi/2,\n    speed=17.5,  # 63 km/h (speeding)\n    behavior_params={'speed_increase': 9.17}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[48.0, 4.41],  # Left offset for lane change\n    heading=np.pi/2,\n    speed=10.0,\n    behavior_params={'lane_change_direction': 'left'}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning with construction awareness)\nego = HumanLikeVehicle(\n    road=road,\n    position=[30.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1,  # Left-turn lane\n    behavior_params={'construction_awareness': True}\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[30.0, 1.213],  # Right offset\n    heading=np.pi/2,\n    speed=9.0,\n    behavior_params={\n        'lane_change_direction': 'left',\n        'lateral_distance': 1.213,\n        'safety_margin': 0.5  # Reduced safety margin\n    }\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[28.724, 0.0],  # Tailgating position\n    heading=np.pi/2,\n    speed=8.5,\n    behavior_params={\n        'min_gap': 1.276,\n        'aggressiveness': 0.95\n    }\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning under control)\nego = HumanLikeVehicle(\n    road=road,\n    position=[50.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1  # Left-turn destination\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[45.0, 3.5],  # Left offset\n    heading=np.pi/2,\n    speed=15.1,  # 54.36 km/h (speed increased)\n    behavior_params={'speed_deviation': 6.77}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[47.3, -2.7],  # Rear-left position\n    heading=np.pi/2,\n    speed=10.0,\n    behavior_params={'lane_change_direction': 'left'}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning with caution)\nego = HumanLikeVehicle(\n    road=road,\n    position=[30.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1,  # Left-turn lane\n    behavior_params={'closure_awareness': True}\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[26.594, 1.5],  # Left offset (3.405m lateral)\n    heading=np.pi/2,\n    speed=10.0,\n    behavior_params={'lane_change_aggressiveness': 0.95}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[27.5, 0.0],  # Left-rear position\n    heading=np.pi/2,\n    speed=15.88,  # 57.1 km/h (7.55m/s over limit)\n    behavior_params={'speed_variance': 0.2}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning)\nego = HumanLikeVehicle(\n    road=road,\n    position=[50.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1  # Left-turn destination lane\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[48.0, -2.5],  # Rear position\n    heading=np.pi/2,\n    speed=22.46,  # 80.86 km/h (base 30km/h + 14.13m/s increase)\n    behavior_params={'acceleration_profile': 'aggressive'}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[52.0, 1.5],  # Right offset\n    heading=np.pi/2,\n    speed=13.44,  # 48.38 km/h (base 30km/h + 5.11m/s increase)\n    behavior_params={'lateral_intrusion': True}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning)\nego = HumanLikeVehicle(\n    road=road,\n    position=[60.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1  # Left-turn destination lane\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[60.0, -4.224],  # Rear position\n    heading=np.pi/2,\n    speed=9.0,\n    behavior_params={'lane_change_direction': 'right'}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[60.0, 4.279],  # Front position\n    heading=np.pi/2,\n    speed=10.0,\n    behavior_params={'lane_change_direction': 'right'}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning with caution)\nego = HumanLikeVehicle(\n    road=road,\n    position=[40.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1,  # Left-turn destination lane\n    behavior_params={'caution_factor': 0.8}\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[38.587, 1.413],  # Left offset for lane change\n    heading=np.pi/2,\n    speed=10.0,\n    behavior_params={\n        'lane_change_direction': 'left',\n        'lateral_distance': 1.413\n    }\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[35.0, 2.5],  # Left-rear position\n    heading=np.pi/2,\n    speed=13.06,  # Speed increase\n    behavior_params={'speed_deviation': +13.06}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning)\nego = HumanLikeVehicle(\n    road=road,\n    position=[60.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1  # Left-turn destination lane\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[58.0, 2.5],  # Left offset\n    heading=np.pi/2,\n    speed=10.0,\n    behavior_params={'brake_reaction_time': 2.428}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[57.0, 3.5],  # Left rear position\n    heading=np.pi/2,\n    speed=12.5,  # 45 km/h (speeding)\n    behavior_params={'speed_increase': 14.129}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning)\nego = HumanLikeVehicle(\n    road=road,\n    position=[50.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1  # Left-turn destination lane\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[48.0, 2.5],  # Left offset position\n    heading=np.pi/2,\n    speed=20.27,  # 72.97 km/h (base speed + 11.93 m/s increase)\n    behavior_params={'speed_increase': 11.934}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[50.0, -1.013],  # Rear position with exact gap\n    heading=np.pi/2,\n    speed=9.0,\n    behavior_params={'lane_change_direction': 'left'}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (executing left turn)\nego = HumanLikeVehicle(\n    road=road,\n    position=[50.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1  # Left-turn destination lane\n)\n\n# Adversarial vehicles (tailgating scenarios)\nadv1 = IDMVehicle(\n    road=road,\n    position=[50.0, 1.265],  # Left tailgating\n    heading=np.pi/2,\n    speed=8.33,\n    behavior_params={'min_gap': 1.264}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[51.43, 0.0],  # Right tailgating\n    heading=np.pi/2,\n    speed=8.5,\n    behavior_params={'min_gap': 1.430}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning under control zone)\nego = HumanLikeVehicle(\n    road=road,\n    position=[60.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1,  # Left-turn destination lane\n    behavior_params={'caution_factor': 0.8}\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[55.0, 3.5],  # Left offset position\n    heading=np.pi/2,\n    speed=15.55,  # 56 km/h (base 30 + 7.22 m/s increase)\n    behavior_params={'aggressiveness': 0.95}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[57.5, -2.0],  # Rear position\n    heading=np.pi/2,\n    speed=18.06,  # 65 km/h (base 30 + 9.73 m/s increase)\n    behavior_params={'min_gap': 2.0}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning with caution)\nego = HumanLikeVehicle(\n    road=road,\n    position=[25.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1,  # Left-turn lane\n    behavior_params={'caution_factor': 0.6}\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[25.0, -1.324],  # Tailgating position\n    heading=np.pi/2,\n    speed=8.5,\n    behavior_params={'min_gap': 1.324}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[23.5, 0.0],  # Left offset\n    heading=np.pi/2,\n    speed=9.0,\n    behavior_params={'brake_reaction_time': 1.709}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning under control)\nego = HumanLikeVehicle(\n    road=road,\n    position=[50.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1,  # Left-turn lane\n    behavior_params={'caution_factor': 0.7}\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[46.511, 1.5],  # Left offset (3.49m)\n    heading=np.pi/2,\n    speed=9.0,\n    behavior_params={\n        'lane_change_direction': 'right',\n        'lateral_distance': 3.488\n    }\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[50.0, -2.001],  # Rear position (2.00m)\n    heading=np.pi/2,\n    speed=8.5,\n    behavior_params={\n        'lane_change_direction': 'left',\n        'longitudinal_distance': 2.001\n    }\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning with caution)\nego = HumanLikeVehicle(\n    road=road,\n    position=[50.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1,  # Left-turn lane\n    behavior_params={'caution_factor': 0.8}\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[52.0, 1.5],  # Front-right position\n    heading=np.pi/2,\n    speed=9.0,\n    behavior_params={'brake_reaction_time': 2.283}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[51.0, 0.75],  # Front-center position\n    heading=np.pi/2,\n    speed=8.5,\n    behavior_params={'brake_reaction_time': 1.861}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning)\nego = HumanLikeVehicle(\n    road=road,\n    position=[50.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1  # Left-turn destination lane\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[46.008, 0.0],  # Rear position (3.992m behind)\n    heading=np.pi/2,\n    speed=9.0,\n    behavior_params={'lane_change_direction': 'left'}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[53.347, 0.0],  # Front position (3.347m ahead)\n    heading=np.pi/2,\n    speed=8.0,\n    behavior_params={'lane_change_direction': 'right'}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning under closure)\nego = HumanLikeVehicle(\n    road=road,\n    position=[30.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1  # Left-turn destination lane\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[29.5, 0.63],  # Left tailgating\n    heading=np.pi/2,\n    speed=8.5,\n    behavior_params={'min_gap': 0.63}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[31.1, 0.0],  # Front tailgating\n    heading=np.pi/2,\n    speed=8.8,\n    behavior_params={'min_gap': 1.09}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (executing left turn)\nego = HumanLikeVehicle(\n    road=road,\n    position=[40.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1  # Left-turn destination lane\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[40.0, 0.673],  # Left tailgating position\n    heading=np.pi/2,\n    speed=8.5,\n    behavior_params={'min_gap': 0.673}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[42.343, 0.0],  # Right offset for lane change\n    heading=np.pi/2,\n    speed=9.0,\n    behavior_params={\n        'lane_change_direction': 'left',\n        'lateral_distance': 2.343\n    }\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning)\nego = HumanLikeVehicle(\n    road=road,\n    position=[30.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1  # Left-turn destination lane\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[27.0, 3.07],  # Left offset\n    heading=np.pi/2,\n    speed=9.0,\n    behavior_params={'lane_change_direction': 'left'}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[30.0, -2.27],  # Rear position\n    heading=np.pi/2,\n    speed=8.5,\n    behavior_params={'lane_change_direction': 'left'}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning)\nego = HumanLikeVehicle(\n    road=road,\n    position=[50.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1  # Left-turn destination lane\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[46.354, 1.5],  # Left offset (3.645m)\n    heading=np.pi/2,\n    speed=9.0,\n    behavior_params={'lane_change_direction': 'right'}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[50.0, -2.0],  # Rear position\n    heading=np.pi/2,\n    speed=8.5,\n    behavior_params={'brake_reaction_time': 2.798}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning under control)\nego = HumanLikeVehicle(\n    road=road,\n    position=[60.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1,  # Left-turn lane\n    behavior_params={'caution_factor': 0.75}\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[62.215, 0.0],  # Left offset\n    heading=np.pi/2,\n    speed=9.0,\n    behavior_params={\n        'lane_change_direction': 'right',\n        'lateral_distance': 2.215\n    }\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[57.279, 0.0],  # Rear position\n    heading=np.pi/2,\n    speed=8.5,\n    behavior_params={\n        'lane_change_direction': 'right',\n        'longitudinal_distance': 2.721\n    }\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning)\nego = HumanLikeVehicle(\n    road=road,\n    position=[30.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1  # Left-turn destination lane\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[28.0, 1.5],  # Left offset position\n    heading=np.pi/2,\n    speed=9.0,\n    behavior_params={'brake_reaction_time': 2.272}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[30.0, -1.892],  # Rear position\n    heading=np.pi/2,\n    speed=8.5,\n    behavior_params={'lane_change_direction': 'left'}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (controlled left-turn)\nego = HumanLikeVehicle(\n    road=road,\n    position=[60.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1,  # Left-turn lane\n    behavior_params={'caution_factor': 0.8}\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[63.0, 3.089],  # Front-right offset\n    heading=np.pi/2,\n    speed=9.0,\n    behavior_params={'lane_change_direction': 'right'}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[62.5, -2.0],  # Right-rear position\n    heading=np.pi/2,\n    speed=10.0,\n    behavior_params={'brake_reaction_time': 2.69}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning with caution)\nego = HumanLikeVehicle(\n    road=road,\n    position=[70.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1,  # Left-turn destination lane\n    behavior_params={'closure_awareness': 0.8}\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[68.5, 1.021],  # Left offset\n    heading=np.pi/2,\n    speed=9.0,\n    behavior_params={'lane_change_aggressiveness': 0.9}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[72.0, -3.023],  # Right offset\n    heading=np.pi/2,\n    speed=10.0,\n    behavior_params={'lane_change_aggressiveness': 0.95}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning)\nego = HumanLikeVehicle(\n    road=road,\n    position=[50.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1  # Left-turn destination lane\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[50.0, 0.874],  # Tailgating position\n    heading=np.pi/2,\n    speed=8.33,\n    behavior_params={'min_gap': 0.874}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[54.889, 0.0],  # Right offset for lane change\n    heading=np.pi/2,\n    speed=9.0,\n    behavior_params={\n        'lane_change_direction': 'left',\n        'lateral_distance': 4.889\n    }\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning under control)\nego = HumanLikeVehicle(\n    road=road,\n    position=[40.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1,  # Left-turn lane\n    behavior_params={'caution_factor': 0.8}\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[42.0, 3.0],  # Front position\n    heading=np.pi/2,\n    speed=9.53,  # 14.33% speed increase\n    behavior_params={'speed_factor': 1.1433}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[37.0, 0.0],  # Left offset\n    heading=np.pi/2,\n    speed=7.5,\n    behavior_params={'brake_reaction_time': 2.837}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning)\nego = HumanLikeVehicle(\n    road=road,\n    position=[60.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1  # Left-turn destination lane\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[63.127, 0.0],  # Right offset\n    heading=0,\n    speed=10.0,\n    behavior_params={'lane_change_direction': 'right'}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[55.315, 0.0],  # Left offset\n    heading=0,\n    speed=9.5,\n    behavior_params={'lane_change_direction': 'right'}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning)\nego = HumanLikeVehicle(\n    road=road,\n    position=[50.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1  # Left-turn destination lane\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[50.0, -3.5],  # Directly behind ego\n    heading=np.pi/2,\n    speed=8.33,\n    behavior_params={'brake_reaction_time': 2.097}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[50.0, -7.0],  # Rear position with offset\n    heading=np.pi/2,\n    speed=17.86,  # 8.33 + 9.53 m/s speed increase\n    behavior_params={'speed_variance': 0.0}  # Maintain constant speeding\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (controlled left-turn)\nego = HumanLikeVehicle(\n    road=road,\n    position=[60.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1,\n    behavior_params={'caution_factor': 0.8}\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[58.0, 3.5],  # Left offset\n    heading=np.pi/2,\n    speed=14.66,  # 52.8 km/h (speed increased by 6.33 m/s)\n    behavior_params={'speed_deviation': 6.327}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[57.843, 2.158],  # Left with lateral displacement\n    heading=np.pi/2,\n    speed=10.0,\n    behavior_params={'lane_change_aggressiveness': 0.95}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning under closure)\nego = HumanLikeVehicle(\n    road=road,\n    position=[35.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1,  # Left-turn lane\n    behavior_params={'caution_factor': 0.6}\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[32.0, -3.5],  # Rear position\n    heading=np.pi/2,\n    speed=22.26,  # 80 km/h (13.93 m/s speed increase)\n    behavior_params={'speed_deviation': 13.928}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[37.231, 0.0],  # Front with lateral offset\n    heading=np.pi/2,\n    speed=10.0,\n    behavior_params={'lane_change_direction': 'left'}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\nimport numpy as np\n\n# Ego vehicle (left-turning with caution)\nego = HumanLikeVehicle(\n    road=road,\n    position=[30.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1,  # Left-turn destination lane\n    behavior_params={'caution_factor': 0.6}\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[32.5, 3.0],  # Right offset\n    heading=np.pi/2,\n    speed=21.65,  # 78 km/h (base 30 + 13.32 m/s increase)\n    behavior_params={'aggressiveness': 0.95}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[27.5, -2.0],  # Left offset\n    heading=np.pi/2,\n    speed=14.73,  # 53 km/h (base 30 + 6.40 m/s increase)\n    behavior_params={'aggressiveness': 0.85}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\nimport numpy as np\n\n# Ego vehicle (cautious left-turn)\nego = HumanLikeVehicle(\n    road=road,\n    position=[45.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1,\n    behavior_params={'construction_awareness': True}\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[42.0, 3.5],  # Left offset\n    heading=np.pi/2,\n    speed=13.84,  # 8.33 + 5.51 m/s\n    behavior_params={'aggressiveness': 0.95}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[45.0, 8.0],  # Front position\n    heading=np.pi/2,\n    speed=14.36,  # 8.33 + 6.03 m/s\n    behavior_params={'ignore_closure': True}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning)\nego = HumanLikeVehicle(\n    road=road,\n    position=[30.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1  # Left-turn destination lane\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[27.602, 2.398],  # Left offset\n    heading=np.pi/2,\n    speed=9.0,\n    behavior_params={'lane_change_direction': 'right'}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[30.0, -2.392],  # Rear position\n    heading=np.pi/2,\n    speed=8.5,\n    behavior_params={'lane_change_direction': 'left'}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning)\nego = HumanLikeVehicle(\n    road=road,\n    position=[50.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1  # Left-turn destination lane\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[48.0, -2.5],  # Rear position\n    heading=np.pi/2,\n    speed=15.87,  # 57.1 km/h (speed increased)\n    behavior_params={'acceleration': 7.54}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[50.0, 1.077],  # Front position\n    heading=np.pi/2,\n    speed=8.33,\n    behavior_params={'min_gap': 1.077}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning with construction awareness)\nego = HumanLikeVehicle(\n    road=road,\n    position=[50.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1,  # Left-turn destination lane\n    behavior_params={'construction_awareness': True}\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[48.0, 3.5],  # Left offset position\n    heading=np.pi/2,\n    speed=9.24,  # 10.86% speed increase\n    behavior_params={'speed_factor': 1.1086}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[50.0, -5.0],  # Rear position\n    heading=np.pi/2,\n    speed=8.33,\n    behavior_params={'lane_change_direction': 'right'}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning in fast lane)\nego = HumanLikeVehicle(\n    road=road,\n    position=[60.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1  # Left-turn destination lane\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[62.5, 1.5],  # Right offset position\n    heading=np.pi/2,\n    speed=9.0,\n    behavior_params={'brake_reaction_time': 2.414}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[60.0, 0.868],  # Front tailgating position\n    heading=np.pi/2,\n    speed=8.5,\n    behavior_params={'min_gap': 0.868}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning)\nego = HumanLikeVehicle(\n    road=road,\n    position=[40.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1  # Left-turn destination lane\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[40.635, 0.0],  # Tailgating position (right offset)\n    heading=np.pi/2,\n    speed=8.33,\n    behavior_params={'min_gap': 0.635}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[42.0, 0.0],  # Right-side position\n    heading=np.pi/2,\n    speed=9.0,\n    behavior_params={'brake_reaction_time': 2.712}\n)",
    "from NGSIM_env.vehicle.behavior import IDMVehicle\nfrom NGSIM_env.vehicle.humandriving import HumanLikeVehicle\n\n# Ego vehicle (left-turning under control)\nego = HumanLikeVehicle(\n    road=road,\n    position=[60.0, 0.0],\n    heading=np.pi/2,  # Facing north\n    speed=8.33,  # 30 km/h\n    target_lane_index=1,  # Left-turn lane\n    behavior_params={'caution_factor': 0.8}\n)\n\n# Adversarial vehicles\nadv1 = IDMVehicle(\n    road=road,\n    position=[60.0, 1.142],  # Front tailgater\n    heading=np.pi/2,\n    speed=8.5,\n    behavior_params={'min_gap': 1.142}\n)\n\nadv2 = IDMVehicle(\n    road=road,\n    position=[60.0, -1.409],  # Rear tailgater\n    heading=np.pi/2,\n    speed=8.2,\n    behavior_params={'min_gap': 1.409}\n)"
  ],
  "behavior": [
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (left-turn trajectory)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[30, 0],\n        turn_radius=15.0\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    unsafe_lane_change_params={\n        'direction': 'right',\n        'min_distance': 4.97,\n        'duration': 3.0\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    tailgating_params={\n        'target_vehicle': ego,\n        'min_distance': 0.77,\n        'aggressiveness': 0.9\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (left-turn with caution)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[20, 0],\n        turn_radius=12.0,\n        caution_factor=0.7  # Reduced speed for closure\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    emergency_brake_params={\n        'trigger_distance': 5.0,\n        'deceleration': -4.0,\n        'reaction_time': 1.402\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    emergency_brake_params={\n        'trigger_distance': 6.0,\n        'deceleration': -3.5,\n        'reaction_time': 2.118\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (cautious left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[50, 0],\n        turn_radius=15.0,\n        caution_factor=0.8  # Reduced speed for construction zone\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    tailgating_params={\n        'target_vehicle': ego,\n        'min_distance': 1.10,\n        'aggressiveness': 0.95\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    unsafe_lane_change_params={\n        'direction': 'right',\n        'lateral_distance': 2.91,\n        'duration': 2.5\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (standard left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[30, 0],\n        turn_radius=12.0\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    tailgating_params={\n        'target_vehicle': ego,\n        'min_distance': 1.083,\n        'aggressiveness': 0.9\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    unsafe_lane_change_params={\n        'direction': 'right',\n        'lateral_distance': 2.237,\n        'duration': 2.0\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (cautious left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[40, 0],\n        turn_radius=12.0,\n        caution_factor=0.6  # Reduced speed for control zone\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    emergency_brake_params={\n        'trigger_distance': 5.0,\n        'deceleration': -4.5,\n        'reaction_time': 2.514\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    tailgating_params={\n        'target_vehicle': ego,\n        'min_distance': 0.532,\n        'aggressiveness': 0.95\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (controlled left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[50, 0],\n        turn_radius=12.0,\n        caution_factor=0.7  # Reduced speed for control zone\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    emergency_brake_params={\n        'trigger_distance': 6.0,\n        'deceleration': -4.2,\n        'reaction_time': 1.552\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    tailgating_params={\n        'target_vehicle': ego,\n        'min_distance': 1.125,\n        'aggressiveness': 0.9\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (cautious left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[30, 0],\n        turn_radius=12.0,\n        caution_factor=0.8  # Reduced speed for closure zone\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    speeding_params={\n        'target_speed': 19.0,\n        'acceleration': 2.5,\n        'aggressiveness': 0.95\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    unsafe_lane_change_params={\n        'direction': 'right',\n        'lateral_distance': 2.121,\n        'duration': 2.0,\n        'aggressiveness': 0.9\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (cautious left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[30, 0],\n        turn_radius=12.0,\n        caution_factor=0.8  # Reduced speed for closure zone\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    unsafe_lane_change_params={\n        'direction': 'right',\n        'lateral_distance': 2.273,\n        'duration': 2.0\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    emergency_brake_params={\n        'trigger_distance': 5.0,\n        'deceleration': -4.0,\n        'reaction_time': 1.367\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (standard left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[50, 0],\n        turn_radius=15.0\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    speeding_params={\n        'speed_increase': 9.17,\n        'acceleration_rate': 2.5\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    unsafe_lane_change_params={\n        'direction': 'left',\n        'lateral_distance': 4.41,\n        'duration': 2.8\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (cautious left-turn in construction zone)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[30, 0],\n        turn_radius=12.0,\n        caution_factor=0.6  # Reduced speed for construction\n    ),\n    construction_zone_params={\n        'deceleration_distance': 15.0,\n        'min_speed': 5.56  # 20 km/h\n    }\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    unsafe_lane_change_params={\n        'direction': 'left',\n        'lateral_distance': 1.213,\n        'duration': 2.0,\n        'safety_override': True\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    tailgating_params={\n        'target_vehicle': ego,\n        'min_distance': 1.276,\n        'aggressiveness': 0.95,\n        'brake_reaction_time': 1.2\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (controlled left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[50, 0],\n        turn_radius=12.0,\n        caution_factor=0.6  # Reduced speed for control zone\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    speeding_params={\n        'speed_increase': 6.77,\n        'acceleration_profile': 'aggressive'\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    unsafe_lane_change_params={\n        'direction': 'left',\n        'lateral_distance': 2.70,\n        'duration': 2.0\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (cautious left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[30, 0],\n        turn_radius=12.0,\n        caution_factor=0.6  # Reduced speed for closure\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    unsafe_lane_change_params={\n        'direction': 'left',\n        'lateral_distance': 3.405,\n        'duration': 2.8,\n        'aggressiveness': 0.95\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    speeding_params={\n        'speed_increase': 7.548,\n        'acceleration_profile': 'aggressive'\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (defensive left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[50, 0],\n        turn_radius=12.0,\n        safety_margin=1.2  # Increased safety buffer\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    speeding_params={\n        'target_speed': 22.46,\n        'acceleration_rate': 4.0,\n        'min_distance': 2.5\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    lateral_intrusion_params={\n        'direction': 'right',\n        'intrusion_distance': 1.5,\n        'speed': 13.44,\n        'angle_deviation': 0.2\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (standard left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[60, 0],\n        turn_radius=15.0\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    unsafe_lane_change_params={\n        'direction': 'right',\n        'lateral_distance': 4.224,\n        'duration': 2.5\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    unsafe_lane_change_params={\n        'direction': 'right',\n        'lateral_distance': 4.279,\n        'duration': 2.0\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (cautious left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[40, 0],\n        turn_radius=12.0,\n        caution_factor=0.8  # Reduced speed for closure zone\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    unsafe_lane_change_params={\n        'direction': 'left',\n        'lateral_distance': 1.413,\n        'duration': 2.0,\n        'aggressiveness': 0.9\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    speeding_params={\n        'speed_increase': 13.06,\n        'acceleration_profile': 'aggressive'\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (controlled left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[60, 0],\n        turn_radius=15.0,\n        caution_factor=0.8  # Reduced speed for control zone\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    emergency_brake_params={\n        'trigger_distance': 7.0,\n        'deceleration': -4.0,\n        'reaction_time': 2.428\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    speeding_params={\n        'speed_increase': 14.129,\n        'acceleration_duration': 3.0\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (standard left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[50, 0],\n        turn_radius=12.0\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    speeding_params={\n        'speed_increase': 11.934,\n        'acceleration_profile': 'aggressive' \n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    unsafe_lane_change_params={\n        'direction': 'left',\n        'lateral_distance': 1.013,\n        'duration': 2.0,\n        'aggressiveness': 0.85\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (standard left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[50, 0],\n        turn_radius=15.0\n    )\n)\n\n# Adversarial behaviors (aggressive tailgating)\nadv1.controller = IDMController(\n    adv1,\n    tailgating_params={\n        'target_vehicle': ego,\n        'min_distance': 1.264,\n        'aggressiveness': 0.95\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    tailgating_params={\n        'target_vehicle': ego,\n        'min_distance': 1.430,\n        'aggressiveness': 0.92\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (controlled left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[60, 0],\n        turn_radius=15.0,\n        caution_factor=0.8  # Reduced speed for control zone\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    speeding_params={\n        'target_speed': 15.55,\n        'acceleration': 2.5,\n        'lateral_offset': 3.5\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    tailgating_params={\n        'target_vehicle': ego,\n        'min_distance': 2.0,\n        'aggressiveness': 0.98,\n        'speed_boost': 9.73\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (cautious left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[25, 0],\n        turn_radius=12.0,\n        caution_factor=0.6  # Reduced speed for closure zone\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    tailgating_params={\n        'target_vehicle': ego,\n        'min_distance': 1.324,\n        'aggressiveness': 0.95\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    emergency_brake_params={\n        'trigger_distance': 5.0,\n        'deceleration': -4.0,\n        'reaction_time': 1.709\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (controlled left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[50, 0],\n        turn_radius=12.0,\n        caution_factor=0.7  # Reduced speed for control zone\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    unsafe_lane_change_params={\n        'direction': 'right',\n        'lateral_distance': 3.488,\n        'duration': 2.5,\n        'aggressiveness': 0.9\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    unsafe_lane_change_params={\n        'direction': 'left',\n        'longitudinal_distance': 2.001,\n        'duration': 2.0,\n        'aggressiveness': 0.85\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (cautious left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[50, 0],\n        turn_radius=12.0,\n        caution_factor=0.8  # Reduced speed for closure zone\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    emergency_brake_params={\n        'trigger_distance': 5.0,\n        'deceleration': -4.0,\n        'reaction_time': 2.283\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    emergency_brake_params={\n        'trigger_distance': 4.0,\n        'deceleration': -4.5,\n        'reaction_time': 1.861\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (standard left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[50, 0],\n        turn_radius=15.0\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    unsafe_lane_change_params={\n        'direction': 'left',\n        'lateral_distance': 3.992,\n        'duration': 2.8\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    unsafe_lane_change_params={\n        'direction': 'right', \n        'lateral_distance': 3.347,\n        'duration': 2.5\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (cautious left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[30, 0],\n        turn_radius=12.0,\n        caution_factor=0.6  # Reduced speed for closure\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    tailgating_params={\n        'target_vehicle': ego,\n        'min_distance': 0.63,\n        'aggressiveness': 0.95\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    tailgating_params={\n        'target_vehicle': ego,\n        'min_distance': 1.09,\n        'aggressiveness': 0.85\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (standard left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[40, 0],\n        turn_radius=12.0\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    tailgating_params={\n        'target_vehicle': ego,\n        'min_distance': 0.673,\n        'aggressiveness': 0.95\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    unsafe_lane_change_params={\n        'direction': 'left',\n        'lateral_distance': 2.343,\n        'duration': 2.0\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (cautious left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[30, 0],\n        turn_radius=12.0,\n        caution_factor=0.6  # Reduced speed for closure zone\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    unsafe_lane_change_params={\n        'direction': 'left',\n        'lateral_distance': 3.07,\n        'duration': 2.5\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    unsafe_lane_change_params={\n        'direction': 'left',\n        'longitudinal_distance': 2.27,\n        'duration': 3.0\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (standard left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[50, 0],\n        turn_radius=15.0\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    unsafe_lane_change_params={\n        'direction': 'right',\n        'lateral_distance': 3.645,\n        'duration': 2.5\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    emergency_brake_params={\n        'trigger_distance': 5.0,\n        'deceleration': -4.0,\n        'reaction_time': 2.798\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (controlled left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[60, 0],\n        turn_radius=15.0,\n        caution_factor=0.75  # Speed reduction for control zone\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    unsafe_lane_change_params={\n        'direction': 'right',\n        'lateral_distance': 2.215,\n        'duration': 2.8,\n        'aggressiveness': 0.85\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    unsafe_lane_change_params={\n        'direction': 'right',\n        'longitudinal_distance': 2.721,\n        'duration': 3.2,\n        'aggressiveness': 0.8\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (standard left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[30, 0],\n        turn_radius=12.0\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    emergency_brake_params={\n        'trigger_distance': 5.0,\n        'deceleration': -4.0,\n        'reaction_time': 2.272\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    unsafe_lane_change_params={\n        'direction': 'left',\n        'lateral_distance': 1.892,\n        'duration': 2.0\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (cautious left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[60, 0],\n        turn_radius=15.0,\n        caution_factor=0.8  # Reduced speed for control zone\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    unsafe_lane_change_params={\n        'direction': 'right',\n        'lateral_distance': 3.089,\n        'duration': 2.8\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    emergency_brake_params={\n        'trigger_distance': 7.0,\n        'deceleration': -4.0,\n        'reaction_time': 2.69\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (cautious left-turn with closure awareness)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[70, 0],\n        turn_radius=15.0,\n        caution_factor=0.8  # Reduced speed for closure zone\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    unsafe_lane_change_params={\n        'direction': 'left',\n        'lateral_distance': 1.021,\n        'duration': 2.0,\n        'aggressiveness': 0.9\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    unsafe_lane_change_params={\n        'direction': 'left', \n        'lateral_distance': 3.023,\n        'duration': 1.5,\n        'aggressiveness': 0.95\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (standard left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[50, 0],\n        turn_radius=12.0\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    tailgating_params={\n        'target_vehicle': ego,\n        'min_distance': 0.874,\n        'aggressiveness': 0.95\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    unsafe_lane_change_params={\n        'direction': 'left',\n        'lateral_distance': 4.889,\n        'duration': 2.5,\n        'aggressiveness': 0.85\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (controlled left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[40, 0],\n        turn_radius=12.0,\n        caution_factor=0.8  # Reduced speed for control zone\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    speeding_params={\n        'speed_factor': 1.1433,\n        'acceleration': 1.5\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    emergency_brake_params={\n        'trigger_distance': 4.0,\n        'deceleration': -5.0,\n        'reaction_time': 2.837\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (controlled left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[60, 0],\n        turn_radius=15.0,\n        caution_factor=0.8  # Reduced speed for control zone\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    unsafe_lane_change_params={\n        'direction': 'right',\n        'lateral_distance': 3.127,\n        'duration': 2.8\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    unsafe_lane_change_params={\n        'direction': 'right', \n        'lateral_distance': 4.685,\n        'duration': 3.2\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (standard left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[50, 0],\n        turn_radius=12.0\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    emergency_brake_params={\n        'trigger_distance': 10.0,\n        'deceleration': -6.0,\n        'reaction_time': 2.097\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    speeding_params={\n        'target_speed': 17.86,\n        'acceleration_rate': 2.5,\n        'maintain_duration': 5.0\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (regulated left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[60, 0],\n        turn_radius=15.0,\n        caution_factor=0.8  # Speed reduction for control zone\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    speeding_params={\n        'speed_increase': 6.327,\n        'acceleration_profile': 'aggressive' \n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    unsafe_lane_change_params={\n        'direction': 'right',\n        'lateral_distance': 2.158,\n        'duration': 2.3,\n        'aggressiveness': 0.95\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (cautious left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[35, 0],\n        turn_radius=12.0,\n        caution_factor=0.6  # Reduced speed for closure zone\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    speeding_params={\n        'speed_increase': 13.928,\n        'acceleration_profile': 'aggressive'\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    unsafe_lane_change_params={\n        'direction': 'left',\n        'lateral_distance': 2.232,\n        'duration': 2.0,\n        'aggressiveness': 0.85\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (cautious left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[30, 0],\n        turn_radius=12.0,\n        caution_factor=0.6  # Reduced speed for closure zone\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    speeding_params={\n        'target_speed': 21.65,\n        'acceleration': 2.5,\n        'aggressiveness': 0.95\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    speeding_params={\n        'target_speed': 14.73,\n        'acceleration': 1.8,\n        'aggressiveness': 0.85\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (defensive left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[45, 0],\n        turn_radius=12.0,\n        caution_factor=0.6  # Extra caution for closure\n    ),\n    construction_zone_params={\n        'deceleration': -2.0,\n        'min_speed': 5.56  # 20 km/h\n    }\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    speeding_params={\n        'target_speed': 13.84,\n        'acceleration': 2.5,\n        'persistence': 5.0\n    },\n    lateral_aggression_params={\n        'direction': 'right',\n        'pressure': 0.8\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    speeding_params={\n        'target_speed': 14.36,\n        'acceleration': 3.0,\n        'persistence': 4.0\n    },\n    right_of_way_params={\n        'ignore_closure': True,\n        'min_brake_distance': 3.0\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (cautious left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[30, 0],\n        turn_radius=12.0,\n        caution_factor=0.8  # Reduced speed for closure zone\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    unsafe_lane_change_params={\n        'direction': 'right',\n        'lateral_distance': 2.398,\n        'duration': 2.0\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    unsafe_lane_change_params={\n        'direction': 'left',\n        'longitudinal_distance': 2.392,\n        'duration': 2.5\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (standard left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[50, 0],\n        turn_radius=12.0\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    speeding_params={\n        'target_speed': 15.87,\n        'acceleration': 7.54,\n        'aggressiveness': 0.9\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    tailgating_params={\n        'target_vehicle': ego,\n        'min_distance': 1.077,\n        'aggressiveness': 0.95\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (construction-aware left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[50, 0],\n        turn_radius=12.0,\n        caution_factor=0.7  # Reduced speed for construction zone\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    speeding_params={\n        'speed_factor': 1.1086,\n        'acceleration_profile': 'aggressive'\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    unsafe_lane_change_params={\n        'direction': 'right',\n        'lateral_distance': 3.89,\n        'duration': 2.8\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (standard left-turn in fast lane)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[60, 0],\n        turn_radius=15.0\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    emergency_brake_params={\n        'trigger_distance': 5.0,\n        'deceleration': -4.0,\n        'reaction_time': 2.414\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    tailgating_params={\n        'target_vehicle': ego,\n        'min_distance': 0.868,\n        'aggressiveness': 0.95\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (standard left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[40, 0],\n        turn_radius=12.0\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    tailgating_params={\n        'target_vehicle': ego,\n        'min_distance': 0.635,\n        'aggressiveness': 0.95  # High aggression for extreme tailgating\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    emergency_brake_params={\n        'trigger_distance': 5.0,\n        'deceleration': -4.5,\n        'reaction_time': 2.712  # Delayed reaction\n    }\n)",
    "from NGSIM_env.vehicle.controller import IDMController\n\n# Ego behavior (controlled left-turn)\nego.controller = IDMController(\n    ego,\n    target_speed=8.33,\n    trajectory=generate_left_turn_path(\n        entry_point=[60, 0],\n        turn_radius=15.0,\n        caution_factor=0.8  # Reduced speed for control zone\n    )\n)\n\n# Adversarial behaviors\nadv1.controller = IDMController(\n    adv1,\n    tailgating_params={\n        'target_vehicle': ego,\n        'min_distance': 1.142,\n        'aggressiveness': 0.92\n    }\n)\n\nadv2.controller = IDMController(\n    adv2,\n    tailgating_params={\n        'target_vehicle': ego,\n        'min_distance': 1.409,\n        'aggressiveness': 0.88\n    }\n)"
  ]
}